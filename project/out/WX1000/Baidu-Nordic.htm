<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out\WX1000\Baidu-Nordic.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out\WX1000\Baidu-Nordic.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Thu Jan 15 12:00:46 2015
<BR><P>
<H3>Maximum Stack Usage =        536 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; init2 &rArr; services_init &rArr; ble_devinfo_serv_init &rArr; ble_dis_init &rArr; char_add &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[7d]">led_action_stop</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[72]">update_charging_status</a><BR>
 <LI><a href="#[5d]">__asm___14_bd_nrf_delay_c_532987f3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5d]">__asm___14_bd_nrf_delay_c_532987f3__nrf_delay_us</a><BR>
 <LI><a href="#[61]">assert_nrf_callback</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5f]">app_error_handler</a><BR>
 <LI><a href="#[5e]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a><BR>
 <LI><a href="#[d]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">NMI_Handler</a><BR>
 <LI><a href="#[e]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">HardFault_Handler</a><BR>
 <LI><a href="#[f]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">SVC_Handler</a><BR>
 <LI><a href="#[10]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">PendSV_Handler</a><BR>
 <LI><a href="#[11]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">SysTick_Handler</a><BR>
 <LI><a href="#[20]">CCM_AAR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">CCM_AAR_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[18]">ADC_IRQHandler</a> from bd_battery.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[20]">CCM_AAR_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1f]">ECB_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[17]">GPIOTE_IRQHandler</a> from app_gpiote.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[e]">HardFault_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[38]">L1_receive_data</a> from bd_communicate_protocol.o(.text) referenced from main.o(.text)
 <LI><a href="#[0]">LIS3DH_INT1_event_handler</a> from bd_step_counter.o(.text) referenced 2 times from main.o(.data)
 <LI><a href="#[1]">LIS3DH_INT2_event_handler</a> from bd_step_counter.o(.text) referenced 2 times from main.o(.data)
 <LI><a href="#[24]">LPCOMP_COMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[d]">NMI_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[12]">POWER_CLOCK_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[10]">PendSV_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[23]">QDEC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[13]">RADIO_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1e]">RNG_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1c]">RTC0_IRQHandler</a> from main.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[22]">RTC1_IRQHandler</a> from app_timer.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[c]">Reset_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[15]">SPI0_TWI0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[16]">SPI1_TWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[f]">SVC_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[25]">SWI0_IRQHandler</a> from app_timer.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[26]">SWI1_IRQHandler</a> from ble_radio_notification.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[27]">SWI2_IRQHandler</a> from ble_stack_handler.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[28]">SWI3_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[29]">SWI4_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[2a]">SWI5_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[11]">SysTick_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[53]">SystemInit</a> from system_nrf51.o(.text) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[1d]">TEMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[19]">TIMER0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1a]">TIMER1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1b]">TIMER2_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[14]">UART0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[21]">WDT_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[54]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[5a]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0snprintf)
 <LI><a href="#[5a]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0vsnprintf)
 <LI><a href="#[37]">app_timer_evt_get</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[2c]">app_timer_evt_schedule</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[3b]">battery_level_meas_timeout_handler</a> from bd_battery.o(.text) referenced from bd_battery.o(.text)
 <LI><a href="#[3a]">battery_up</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[32]">ble_bondmngr_evt_handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[31]">ble_evt_dispatch</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[56]">ble_flash_erase_data_page</a> from ble_flash.o(.text) referenced from ble_flash.o(.text)
 <LI><a href="#[35]">ble_flash_on_radio_active_evt</a> from ble_flash.o(.text) referenced from main.o(.text)
 <LI><a href="#[36]">ble_stack_evt_get</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[30]">ble_stack_evt_schedule</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[39]">bluetooth_l0_reset</a> from bd_communicate_protocol.o(.text) referenced from main.o(.text)
 <LI><a href="#[42]">bond_fail_callback</a> from bd_private_bond.o(.text) referenced from bd_private_bond.o(.text)
 <LI><a href="#[33]">bond_manager_error_handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[46]">click_algorithm_cb_implement</a> from bd_step_counter.o(.text) referenced from bd_step_counter.o(.text)
 <LI><a href="#[34]">conn_params_error_handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[3d]">delay_send_func</a> from bd_communicate_protocol.o(.text) referenced from bd_communicate_protocol.o(.text)
 <LI><a href="#[59]">detection_delay_timeout_handler</a> from app_button.o(.text) referenced from app_button.o(.text)
 <LI><a href="#[a]">distance_algorithm_accelerate_data_in</a> from distance-calculate.o(.text) referenced 2 times from health-algorithm-inner.o(.data)
 <LI><a href="#[b]">distance_algorithm_error_desc</a> from distance-calculate.o(.text) referenced 2 times from health-algorithm-inner.o(.data)
 <LI><a href="#[9]">distance_algorithm_finalize</a> from distance-calculate.o(.text) referenced 2 times from health-algorithm-inner.o(.data)
 <LI><a href="#[2]">function_charger_event_handler</a> from bd_charging.o(.text) referenced 2 times from main.o(.data)
 <LI><a href="#[3]">function_chargingcomplete_event_handler</a> from bd_charging.o(.text) referenced 2 times from main.o(.data)
 <LI><a href="#[58]">gpiote_event_handler</a> from app_button.o(.text) referenced from app_button.o(.text)
 <LI><a href="#[44]">health_algorithm_cb_implement</a> from bd_step_counter.o(.text) referenced from bd_step_counter.o(.text)
 <LI><a href="#[8]">init_distance_algorithm</a> from distance-calculate.o(.text) referenced 2 times from health-algorithm-inner.o(.data)
 <LI><a href="#[4]">init_sleep_algorithm</a> from sleep-detect-algorithm.o(.text) referenced 2 times from health-algorithm-inner.o(.data)
 <LI><a href="#[45]">input_event_handle_schedule</a> from bd_input_event_source.o(.text) referenced from bd_step_counter.o(.text)
 <LI><a href="#[41]">led_schedule_timer_handle</a> from bd_led_flash.o(.text) referenced from bd_led_flash.o(.text)
 <LI><a href="#[52]">log_send_callback</a> from bd_bluetooth_log.o(.text) referenced from bd_bluetooth_log.o(.text)
 <LI><a href="#[2b]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[49]">motor_schedule_timer_handle</a> from bd_level_drive_motor.o(.text) referenced from bd_level_drive_motor.o(.text)
 <LI><a href="#[2f]">ota_time_out_handle</a> from bd_communicate_protocol.o(.text) referenced from main.o(.text)
 <LI><a href="#[4c]">read_flag</a> from bd_factory_test.o(.text) referenced 2 times from bd_factory_test.o(.text)
 <LI><a href="#[4d]">read_sn</a> from bd_factory_test.o(.text) referenced 2 times from bd_factory_test.o(.text)
 <LI><a href="#[3e]">receive_time_out_handle</a> from bd_communicate_protocol.o(.text) referenced from bd_communicate_protocol.o(.text)
 <LI><a href="#[50]">request_charge</a> from bd_factory_test.o(.text) referenced 2 times from bd_factory_test.o(.text)
 <LI><a href="#[4e]">request_echo</a> from bd_factory_test.o(.text) referenced from bd_factory_test.o(.text)
 <LI><a href="#[51]">request_sensor_data</a> from bd_factory_test.o(.text) referenced from bd_factory_test.o(.text)
 <LI><a href="#[3c]">schedule_async_send</a> from bd_communicate_protocol.o(.text) referenced from bd_communicate_protocol.o(.text)
 <LI><a href="#[40]">schedule_crc_error_handle</a> from bd_communicate_protocol.o(.text) referenced from bd_communicate_protocol.o(.text)
 <LI><a href="#[47]">send_all_data_callback</a> from bd_sync_data.o(.text) referenced 3 times from bd_sync_data.o(.text)
 <LI><a href="#[4a]">send_callback</a> from bd_factory_test.o(.text) referenced from bd_factory_test.o(.text)
 <LI><a href="#[48]">send_data_timeout</a> from bd_sync_data.o(.text) referenced from bd_sync_data.o(.text)
 <LI><a href="#[2d]">sensor_timer_handle</a> from bd_step_counter.o(.text) referenced from main.o(.text)
 <LI><a href="#[6]">sleep_algorithm_accelerate_data_in</a> from sleep-detect-algorithm.o(.text) referenced 2 times from health-algorithm-inner.o(.data)
 <LI><a href="#[7]">sleep_detect_error_desc</a> from sleep-detect-algorithm.o(.text) referenced 2 times from health-algorithm-inner.o(.data)
 <LI><a href="#[5]">sleep_detect_finalize</a> from sleep-detect-algorithm.o(.text) referenced 2 times from health-algorithm-inner.o(.data)
 <LI><a href="#[57]">softdevice_assertion_handler</a> from ble_stack_handler.o(.text) referenced from ble_stack_handler.o(.text)
 <LI><a href="#[4f]">system_off</a> from bd_factory_test.o(.text) referenced from bd_factory_test.o(.text)
 <LI><a href="#[2e]">tap_timer_handler</a> from bd_step_counter.o(.text) referenced from main.o(.text)
 <LI><a href="#[55]">update_timeout_handler</a> from ble_conn_params.o(.text) referenced from ble_conn_params.o(.text)
 <LI><a href="#[43]">update_wall_clock</a> from bd_wall_clock_timer.o(.text) referenced from bd_wall_clock_timer.o(.text)
 <LI><a href="#[3f]">user_action_timeout_handle</a> from bd_communicate_protocol.o(.text) referenced from bd_communicate_protocol.o(.text)
 <LI><a href="#[4b]">write_flash_handler</a> from bd_factory_test.o(.text) referenced from bd_factory_test.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[54]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[275]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[26c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[276]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[277]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[278]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[279]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[27a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[5d]"></a>__asm___14_bd_nrf_delay_c_532987f3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bd_nrf_delay.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_bd_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_bd_nrf_delay_c_532987f3__nrf_delay_us
</UL>

<P><STRONG><a name="[5e]"></a>__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_timer.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
</UL>

<P><STRONG><a name="[5f]"></a>app_error_handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_test
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_measure_timer_stop
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_measure_timer_start
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_timers_start
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_ble_stack_events_execute
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_send_data_timer
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_l0_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_measure_init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init1
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_up
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_evt_get
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_evt_get
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_manager_error_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_error_handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_devinfo_serv_init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_create
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_charge
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit_test_mode
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_echo
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sn
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_sn
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flag
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_test_flag
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_send_data_timer
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_timers_stop
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_delay_timeout_handler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_IRQHandler
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_id_encode
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_add
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pnp_id_encode
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_log_init
</UL>

<P><STRONG><a name="[61]"></a>assert_nrf_callback</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_reset
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_async_send
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;async_send
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_click_algorithm
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_timer_handle
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_health_algorithm
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_sleep_event
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_distance_event
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_enableFiFo
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetAccAxesRaw
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_assertion_handler
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_write_erased_page
</UL>

<P><STRONG><a name="[6a]"></a>timer_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = timer_init &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init1
</UL>

<P><STRONG><a name="[3a]"></a>battery_up</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = battery_up &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_charging_status
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_status
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_battery_level_update
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[90]"></a>ble_stack_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = ble_stack_init &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_handler_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[32]"></a>ble_bondmngr_evt_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[93]"></a>reset_check</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = reset_check &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b0]"></a>gpio_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>init1</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = init1 &rArr; battery_measure_init &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_measure_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_adc_dev_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lfclk_config
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>init2</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = init2 &rArr; services_init &rArr; ble_devinfo_serv_init &rArr; ble_dis_init &rArr; char_add &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_bluetooth_status
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_device_has_bonded
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_enable
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_framework_init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_read_user_id
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_l0_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_radio_notification_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_params_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_create
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c]"></a>RTC0_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[af]"></a>pre_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pre_init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lfclk_config
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b]"></a>main</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = main &rArr; init2 &rArr; services_init &rArr; ble_devinfo_serv_init &rArr; ble_dis_init &rArr; char_add &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_start
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_detect_n_precharging
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_click_algorithm
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_timers_start
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_backup_info_from_flash
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_SleepSettingsFromFlash
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restart_health_algorithm
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_system_off
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_user_profile
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_daily_target
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_alarm
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sports_data_in_flash
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sleep_data_in_flash
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_need_erase_sport_page_for_when_boot
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_need_erase_sleep_page_for_when_boot
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_bonded
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootup_check
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_execute
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init1
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_check
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[cc]"></a>cal_percentage</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, bd_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = cal_percentage &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_status
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_battery_up_callback
</UL>

<P><STRONG><a name="[18]"></a>ADC_IRQHandler</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, bd_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = ADC_IRQHandler &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_voltage_adjustment
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_percentage
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_status
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[d7]"></a>battery_start</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bd_battery.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_adc_read_once_for_charging_detect
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_adc_read_once
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_meas_timeout_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_wall_clock
</UL>

<P><STRONG><a name="[d6]"></a>battery_adc_read_once</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bd_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = battery_adc_read_once &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_start
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_status
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_measure_init
</UL>

<P><STRONG><a name="[d9]"></a>battery_adc_interrupt_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bd_battery.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_adc_read_once_for_charging_detect
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_measure_init
</UL>

<P><STRONG><a name="[d8]"></a>battery_adc_read_once_for_charging_detect</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, bd_battery.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_adc_interrupt_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_start
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[9c]"></a>battery_adc_dev_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bd_battery.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init1
</UL>

<P><STRONG><a name="[cb]"></a>register_battery_up_callback</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bd_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = register_battery_up_callback &rArr; cal_percentage &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_percentage
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
</UL>

<P><STRONG><a name="[9d]"></a>battery_measure_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bd_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = battery_measure_init &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_adc_interrupt_init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_adc_read_once
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init1
</UL>

<P><STRONG><a name="[10a]"></a>get_battery_power_percentage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_battery.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_private_bond_command
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_firmware_update_command
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_charging_percentage
</UL>

<P><STRONG><a name="[da]"></a>battery_measure_timer_start</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bd_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = battery_measure_timer_start &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_detect_n_precharging
</UL>

<P><STRONG><a name="[db]"></a>battery_measure_timer_stop</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bd_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = battery_measure_timer_stop &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_detect_n_precharging
</UL>

<P><STRONG><a name="[b1]"></a>voltage_detect_n_precharging</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bd_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = voltage_detect_n_precharging &rArr; battery_measure_timer_stop &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_connected
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_measure_timer_stop
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_measure_timer_start
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e1]"></a>set_complete_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_ble_nus.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;async_send
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_package_handle
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_send_func
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_l0_reset
</UL>

<P><STRONG><a name="[8c]"></a>ble_nus_on_ble_evt</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, bd_ble_nus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_nus_on_ble_evt &rArr; bluetooth_l0_reset &rArr; app_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_l0_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[c8]"></a>ble_nus_init</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, bd_ble_nus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ble_nus_init &rArr; rx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_char_add
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_char_add
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[e0]"></a>ble_nus_send_string</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bd_ble_nus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_nus_send_string
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;async_send
</UL>

<P><STRONG><a name="[80]"></a>get_global_should_trigger_ota_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[27b]"></a>set_global_should_trigger_ota_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_communicate_protocol.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>is_bluetooth_connected</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_manager_error_handler
</UL>

<P><STRONG><a name="[df]"></a>async_send</STRONG> (Thumb, 558 bytes, Stack size 48 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_send_string
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_complete_callback
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_async_send
</UL>

<P><STRONG><a name="[3c]"></a>schedule_async_send</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;async_send
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_receive_response
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_resend_package
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_communicate_protocol.o(.text)
</UL>
<P><STRONG><a name="[81]"></a>trigger_ota_mode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = trigger_ota_mode &rArr; ota_pre_restart_info_store &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_health_algorithm
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_pre_restart_info_store
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[2f]"></a>ota_time_out_handle</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bd_communicate_protocol.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[ab]"></a>bluetooth_l0_init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = bluetooth_l0_init &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[e9]"></a>L1_send</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_crc16
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_async_send
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;return_alarm_list
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;login_success_event_dispatch
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;login_fail_event_dispatch
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stack_dump_command_resolve
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_fail_event_dispatch
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_ota_status_response
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_firmware_update_command
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_package
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sport_group_data
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sleep_group_data
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sport_data_from_ram
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_success_event_dispatch
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_log
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_get_dump_info_fail
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sleep_setting_data_in_ram
</UL>

<P><STRONG><a name="[27c]"></a>send_status_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bd_communicate_protocol.o(.text), UNUSED)

<P><STRONG><a name="[102]"></a>bond_success_event_observer</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = bond_success_event_observer &rArr; reset_health_algorithm_data &rArr; reset_cur_sports_data &rArr; get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_health_algorithm
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_step_counts_today
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_dev_loss_controller_data
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_user_data_for_new_bond
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_health_algorithm_data
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_device_has_bonded
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_press_handle
</UL>

<P><STRONG><a name="[106]"></a>enter_ota_status_response</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = enter_ota_status_response &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_firmware_update_command
</UL>

<P><STRONG><a name="[112]"></a>L1_receive_response</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = L1_receive_response &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_async_send
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_receive_data
</UL>

<P><STRONG><a name="[40]"></a>schedule_crc_error_handle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bd_communicate_protocol.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bd_communicate_protocol.o(.text)
</UL>
<P><STRONG><a name="[38]"></a>L1_receive_data</STRONG> (Thumb, 298 bytes, Stack size 32 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = L1_receive_data &rArr; L2_frame_resolve &rArr; resolve_private_bond_command &rArr; send_last_time_sleep_mode &rArr; send_all_data &rArr; start_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_query_timer
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_receive_response
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_crc_check
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2_frame_resolve
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_package_handle
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[82]"></a>get_should_checkdev_loss_on_disconnect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[86]"></a>set_should_checkdev_loss_on_disconnect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[39]"></a>bluetooth_l0_reset</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bluetooth_l0_reset &rArr; app_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bluetooth_log_state
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_query_timer
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_complete_callback
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_on_ble_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>input_event_handle_schedule</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, bd_input_event_source.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = input_event_handle_schedule &rArr; send_all_data &rArr; start_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_status
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_bonded
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_status
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_Double_tap_handle
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_stop
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_press_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_step_counter.o(.text)
</UL>
<P><STRONG><a name="[7d]"></a>led_action_stop</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bd_led_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_charging_status
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_status
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_led_flash_control
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2_frame_resolve
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_action_timeout_handle
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function_charger_event_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_schedule_timer_handle
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_stop
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_press_handle
</UL>

<P><STRONG><a name="[122]"></a>led_action_control_with_interval</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, bd_led_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_status
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_led_action_control_with_interval
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_control
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_animation_status
</UL>

<P><STRONG><a name="[111]"></a>led_action_control</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bd_led_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = led_action_control &rArr; led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_control_with_interval
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2_frame_resolve
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_charging_percentage
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_step_task_complete_status
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_animation_status
</UL>

<P><STRONG><a name="[7c]"></a>notification_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_led_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function_charger_event_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_event_handle_schedule
</UL>

<P><STRONG><a name="[6d]"></a>led_flash_timer_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bd_led_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = led_flash_timer_init &rArr; app_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_create
</UL>

<P><STRONG><a name="[b6]"></a>check_has_bonded</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_private_bond.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tap_timer_handler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_event_handle_schedule
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
</UL>

<P><STRONG><a name="[ad]"></a>set_device_has_bonded</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_private_bond.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_success_event_observer
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[7f]"></a>bond_store_user_id</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bd_private_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bond_store_user_id &rArr; ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_word_write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_crc16_compute
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_block_write
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[ac]"></a>bond_read_user_id</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, bd_private_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bond_read_user_id &rArr; ble_flash_crc16_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_crc16_compute
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[127]"></a>bond_success_event_dispatch</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bd_private_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bond_success_event_dispatch &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_press_handle
</UL>

<P><STRONG><a name="[e4]"></a>bond_fail_event_dispatch</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bd_private_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bond_fail_event_dispatch &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_private_bond_command
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_action_timeout_handle
</UL>

<P><STRONG><a name="[11d]"></a>bond_press_handle</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bd_private_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = bond_press_handle &rArr; bond_success_event_dispatch &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_success_event_observer
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_stop
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_prev_user_data
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_success_event_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_event_handle_schedule
</UL>

<P><STRONG><a name="[117]"></a>check_user_id_bonded</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, bd_private_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = check_user_id_bonded &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_crc16_compute
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_private_bond_command
</UL>

<P><STRONG><a name="[11b]"></a>login_success_event_dispatch</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bd_private_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = login_success_event_dispatch &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_private_bond_command
</UL>

<P><STRONG><a name="[118]"></a>login_fail_event_dispatch</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bd_private_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = login_fail_event_dispatch &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_private_bond_command
</UL>

<P><STRONG><a name="[12b]"></a>monthLength</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bd_wall_clock_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_system_clock
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_time_to_Second
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertToUTCTime
</UL>

<P><STRONG><a name="[12a]"></a>ConvertToUTCTime</STRONG> (Thumb, 258 bytes, Stack size 24 bytes, bd_wall_clock_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monthLength
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
</UL>

<P><STRONG><a name="[12c]"></a>get_day_of_week</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bd_wall_clock_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = get_day_of_week &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_alarm
</UL>

<P><STRONG><a name="[f4]"></a>get_wall_clock_time</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bd_wall_clock_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertToUTCTime
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_systme_clock_valid
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sports_head
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sleep_head
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sports_head
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_cur_sports_data
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minute_timer_handler
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_alarm
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_time_to_flash_v2
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_log
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sleep_setting_head
</UL>

<P><STRONG><a name="[12d]"></a>check_alarm</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, bd_wall_clock_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = check_alarm &rArr; notification_start &rArr; show_step_task_complete_status &rArr; led_action_control &rArr; led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_number
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_day_of_week
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_wall_clock
</UL>

<P><STRONG><a name="[a2]"></a>system_clock_init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, bd_wall_clock_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = system_clock_init &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[131]"></a>convert_time_to_Second</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, bd_wall_clock_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = convert_time_to_Second &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monthLength
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_evt_handler
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_sleep_state
</UL>

<P><STRONG><a name="[f6]"></a>set_system_clock</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, bd_wall_clock_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = set_system_clock &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monthLength
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
</UL>

<P><STRONG><a name="[fb]"></a>return_alarm_list</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, bd_wall_clock_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = return_alarm_list &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_number
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
</UL>

<P><STRONG><a name="[179]"></a>get_wall_clock_time_counter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_wall_clock_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sleep_status
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_algorithm_timestamp
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_Double_tap_handle
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
</UL>

<P><STRONG><a name="[132]"></a>set_wall_clock_time_counter</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bd_wall_clock_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = set_wall_clock_time_counter &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_backup_info_from_flash
</UL>

<P><STRONG><a name="[100]"></a>is_systme_clock_valid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bd_wall_clock_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = is_systme_clock_valid &rArr; get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
</UL>

<P><STRONG><a name="[9e]"></a>hal_acc_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bd_hal_acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = hal_acc_init &rArr; LIS3DH_Init &rArr; LIS3DH_SetODR &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init1
</UL>

<P><STRONG><a name="[e6]"></a>hal_acc_reset</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, bd_hal_acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = hal_acc_reset &rArr; LIS3DH_FIFOModeEnable &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_disable
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_RESET_MEM
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_FIFOModeEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trigger_ota_mode
</UL>

<P><STRONG><a name="[142]"></a>hal_acc_ConfigClick</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, bd_hal_acc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_disable
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetClickWINDOW
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetClickTHS
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetClickLIMIT
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetClickLATENCY
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetClickCFG
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_Dtap
</UL>

<P><STRONG><a name="[147]"></a>hal_acc_config_Dtap</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bd_hal_acc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_disable
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetInt2Pin
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Int1LatchEnable
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_ConfigClick
</UL>

<P><STRONG><a name="[14a]"></a>hal_acc_config_wake_int</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bd_hal_acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = hal_acc_config_wake_int &rArr; LIS3DH_SetInt6D4DConfiguration &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_disable
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetIntMode
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetIntConfiguration
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetInt6D4DConfiguration
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetInt1Threshold
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetInt1Pin
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetInt1Duration
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Int1LatchEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_INT1_event_handler
</UL>

<P><STRONG><a name="[150]"></a>hal_acc_PowerDown</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bd_hal_acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = hal_acc_PowerDown &rArr; LIS3DH_SetMode &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_disable
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_system_off
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_system_off
</UL>

<P><STRONG><a name="[ae]"></a>hal_acc_enable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bd_hal_acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = hal_acc_enable &rArr; LIS3DH_SetMode &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_disable
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_health_algorithm
</UL>

<P><STRONG><a name="[151]"></a>hal_acc_GetFifoData</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bd_hal_acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = hal_acc_GetFifoData &rArr; LIS3DH_GetFifoSourceFSS &rArr; LIS3DH_ReadReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_disable
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetFifoSourceFSS
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetFifoSourceBit
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetAccAxesRaw
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_timer_handle
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_test
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sensor_data
</UL>

<P><STRONG><a name="[136]"></a>LIS3DH_ReadReg</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LIS3DH_ReadReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_tx_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetSPIInterface
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetFifoSourceReg
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetInt1SrcBit
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetInt1Src
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetStatusBit
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetStatusReg
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetWaterMark
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetTriggerInt
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Get6DPosition
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ResetInt1Latch
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetClickResponse
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetFilterDataSel
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetHPFCutOFF
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetHPFMode
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_HPFAOI2Enable
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_HPFAOI1Enable
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_HPFClickEnable
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetSelfTest
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetBLE
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetTempRaw
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetAuxRaw
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetADCAux
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetTemperature
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetStatusAUXBit
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetStatusAUX
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetWHO_AM_I
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetODR
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetMode
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetIntMode
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetIntConfiguration
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetInt6D4DConfiguration
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetInt2Pin
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetInt1Pin
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetFullScale
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetClickCFG
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetBDU
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetAxis
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_RESET_MEM
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Int1LatchEnable
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetFifoSourceFSS
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetFifoSourceBit
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_FIFOModeEnable
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>

<P><STRONG><a name="[137]"></a>LIS3DH_WriteReg</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_tx_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_reset
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_enableFiFo
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetSPIInterface
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetWaterMark
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetTriggerInt
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetFilterDataSel
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetHPFCutOFF
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetHPFMode
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_HPFAOI2Enable
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_HPFAOI1Enable
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_HPFClickEnable
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetSelfTest
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetBLE
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetADCAux
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetTemperature
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetODR
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetMode
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetIntMode
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetIntConfiguration
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetInt6D4DConfiguration
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetInt2Pin
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetInt1Threshold
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetInt1Pin
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetInt1Duration
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetFullScale
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetClickWINDOW
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetClickTHS
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetClickLIMIT
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetClickLATENCY
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetClickCFG
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetBDU
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetAxis
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_RESET_MEM
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Int1LatchEnable
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_FIFOModeEnable
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>

<P><STRONG><a name="[156]"></a>LIS3DH_GetWHO_AM_I</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[157]"></a>LIS3DH_GetStatusAUX</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[158]"></a>LIS3DH_GetStatusAUXBit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[13b]"></a>LIS3DH_SetODR</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_SetODR &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>

<P><STRONG><a name="[159]"></a>LIS3DH_SetTemperature</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_enableFiFo
</UL>

<P><STRONG><a name="[15a]"></a>LIS3DH_SetADCAux</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[15b]"></a>LIS3DH_GetAuxRaw</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[15c]"></a>LIS3DH_GetTempRaw</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[13a]"></a>LIS3DH_SetMode</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_SetMode &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_enable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_PowerDown
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>

<P><STRONG><a name="[139]"></a>LIS3DH_SetAxis</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_SetAxis &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>

<P><STRONG><a name="[13c]"></a>LIS3DH_SetFullScale</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_SetFullScale &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>

<P><STRONG><a name="[13d]"></a>LIS3DH_SetBDU</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_SetBDU &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>

<P><STRONG><a name="[15d]"></a>LIS3DH_SetBLE</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[15e]"></a>LIS3DH_SetSelfTest</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[15f]"></a>LIS3DH_HPFClickEnable</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[160]"></a>LIS3DH_HPFAOI1Enable</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[161]"></a>LIS3DH_HPFAOI2Enable</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[162]"></a>LIS3DH_SetHPFMode</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[163]"></a>LIS3DH_SetHPFCutOFF</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[164]"></a>LIS3DH_SetFilterDataSel</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[14f]"></a>LIS3DH_SetInt1Pin</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_SetInt1Pin &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_wake_int
</UL>

<P><STRONG><a name="[149]"></a>LIS3DH_SetInt2Pin</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_Dtap
</UL>

<P><STRONG><a name="[13e]"></a>LIS3DH_SetClickCFG</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_SetClickCFG &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_ConfigClick
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>

<P><STRONG><a name="[146]"></a>LIS3DH_SetClickTHS</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_ConfigClick
</UL>

<P><STRONG><a name="[143]"></a>LIS3DH_SetClickLIMIT</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_ConfigClick
</UL>

<P><STRONG><a name="[144]"></a>LIS3DH_SetClickLATENCY</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_ConfigClick
</UL>

<P><STRONG><a name="[145]"></a>LIS3DH_SetClickWINDOW</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_ConfigClick
</UL>

<P><STRONG><a name="[165]"></a>LIS3DH_GetClickResponse</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_GetClickResponse &rArr; LIS3DH_ReadReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_INT2_event_handler
</UL>

<P><STRONG><a name="[141]"></a>LIS3DH_RESET_MEM</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LIS3DH_RESET_MEM &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_reset
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_INT1_event_handler
</UL>

<P><STRONG><a name="[148]"></a>LIS3DH_Int1LatchEnable</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_Int1LatchEnable &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_wake_int
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_Dtap
</UL>

<P><STRONG><a name="[166]"></a>LIS3DH_ResetInt1Latch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[13f]"></a>LIS3DH_SetIntConfiguration</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_SetIntConfiguration &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_wake_int
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>

<P><STRONG><a name="[14d]"></a>LIS3DH_SetIntMode</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_SetIntMode &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_wake_int
</UL>

<P><STRONG><a name="[14e]"></a>LIS3DH_SetInt6D4DConfiguration</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LIS3DH_SetInt6D4DConfiguration &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_wake_int
</UL>

<P><STRONG><a name="[167]"></a>LIS3DH_Get6DPosition</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[14b]"></a>LIS3DH_SetInt1Threshold</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LIS3DH_SetInt1Threshold &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_wake_int
</UL>

<P><STRONG><a name="[14c]"></a>LIS3DH_SetInt1Duration</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LIS3DH_SetInt1Duration &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_wake_int
</UL>

<P><STRONG><a name="[138]"></a>LIS3DH_FIFOModeEnable</STRONG> (Thumb, 330 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_FIFOModeEnable &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_reset
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>

<P><STRONG><a name="[168]"></a>LIS3DH_SetTriggerInt</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[169]"></a>LIS3DH_SetWaterMark</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[16a]"></a>LIS3DH_GetStatusReg</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[16b]"></a>LIS3DH_GetStatusBit</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[154]"></a>LIS3DH_GetAccAxesRaw</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LIS3DH_GetAccAxesRaw &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_tx_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_GetFifoData
</UL>

<P><STRONG><a name="[16c]"></a>LIS3DH_GetInt1Src</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LIS3DH_GetInt1Src &rArr; LIS3DH_ReadReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_INT1_event_handler
</UL>

<P><STRONG><a name="[16d]"></a>LIS3DH_GetInt1SrcBit</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[16e]"></a>LIS3DH_GetFifoSourceReg</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[152]"></a>LIS3DH_GetFifoSourceBit</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_GetFifoSourceBit &rArr; LIS3DH_ReadReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_GetFifoData
</UL>

<P><STRONG><a name="[153]"></a>LIS3DH_GetFifoSourceFSS</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LIS3DH_GetFifoSourceFSS &rArr; LIS3DH_ReadReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_GetFifoData
</UL>

<P><STRONG><a name="[16f]"></a>LIS3DH_SetSPIInterface</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>

<P><STRONG><a name="[170]"></a>LIS3DH_enableFiFo</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, bd_lis3dh_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetTemperature
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
</UL>

<P><STRONG><a name="[95]"></a>nrf_delay_ms</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bd_nrf_delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_bd_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_adc_read_once_for_charging_detect
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_adc_read_once
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootup_check
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_check
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vibrator_test
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_led_flash
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_disable
</UL>

<P><STRONG><a name="[134]"></a>spi_master_init</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, bd_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_master_init
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>

<P><STRONG><a name="[155]"></a>spi_master_tx_rx</STRONG> (Thumb, 98 bytes, Stack size 36 bytes, bd_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = spi_master_tx_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetAccAxesRaw
</UL>

<P><STRONG><a name="[135]"></a>spi_master_enable</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bd_spi_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_reset
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_enable
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_INT2_event_handler
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_INT1_event_handler
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_GetFifoData
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_PowerDown
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_wake_int
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_Dtap
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_ConfigClick
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>

<P><STRONG><a name="[140]"></a>spi_master_disable</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bd_spi_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_reset
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_enable
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_INT2_event_handler
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_INT1_event_handler
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_GetFifoData
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_PowerDown
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_wake_int
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_Dtap
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_ConfigClick
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_Init
</UL>

<P><STRONG><a name="[ee]"></a>set_quarter_steps</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_step_counter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_HealthData_command
</UL>

<P><STRONG><a name="[ef]"></a>set_quarter_distance</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_step_counter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_HealthData_command
</UL>

<P><STRONG><a name="[f0]"></a>set_quarter_calories</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_step_counter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_HealthData_command
</UL>

<P><STRONG><a name="[f1]"></a>set_quater_sport_mode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_quater_sport_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_HealthData_command
</UL>

<P><STRONG><a name="[f2]"></a>set_quater_active_time</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_quater_active_time
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_HealthData_command
</UL>

<P><STRONG><a name="[27d]"></a>get_quarter_steps</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_step_counter.o(.text), UNUSED)

<P><STRONG><a name="[197]"></a>get_quarter_distance</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_step_counter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sport_data_from_ram
</UL>

<P><STRONG><a name="[198]"></a>get_quarter_calories</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_step_counter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sport_data_from_ram
</UL>

<P><STRONG><a name="[171]"></a>sensor_timers_stop</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bd_step_counter.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>

<P><STRONG><a name="[c0]"></a>sensor_timers_start</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = sensor_timers_start &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_INT1_event_handler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[173]"></a>sports_mode</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sports_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_curr_health_data
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_distance_event
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minute_timer_handler
</UL>

<P><STRONG><a name="[172]"></a>handle_distance_event</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = handle_distance_event &rArr; send_all_data &rArr; start_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_step_counts_today
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_step_counts_today
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_daily_target
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;health_algorithm_cb_implement
</UL>

<P><STRONG><a name="[175]"></a>handle_sleep_event</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = handle_sleep_event &rArr; send_all_data &rArr; start_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_evt_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;health_algorithm_cb_implement
</UL>

<P><STRONG><a name="[44]"></a>health_algorithm_cb_implement</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = health_algorithm_cb_implement &rArr; handle_distance_event &rArr; send_all_data &rArr; start_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_sleep_event
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_distance_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_step_counter.o(.text)
</UL>
<P><STRONG><a name="[f7]"></a>is_algorithm_started</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_step_counter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_wall_clock
</UL>

<P><STRONG><a name="[e5]"></a>stop_health_algorithm</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = stop_health_algorithm &rArr; health_algorithm_finalize
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;health_algorithm_finalize
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_success_event_observer
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trigger_ota_mode
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_health_algorithm
</UL>

<P><STRONG><a name="[178]"></a>update_algorithm_timestamp</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = update_algorithm_timestamp &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time_counter
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_health_algorithm
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minute_timer_handler
</UL>

<P><STRONG><a name="[17b]"></a>start_health_algorithm</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = start_health_algorithm &rArr; update_algorithm_timestamp &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_health_algorithm
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_enable
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_health_algorithm_callback
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_health_algorithm
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_algorithm_timestamp
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restart_health_algorithm
</UL>

<P><STRONG><a name="[ba]"></a>restart_health_algorithm</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = restart_health_algorithm &rArr; start_health_algorithm &rArr; update_algorithm_timestamp &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sports_head
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_setting_head
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_head
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_cur_sports_data
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_user_profile
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_health_algorithm
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[105]"></a>reset_health_algorithm_data</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = reset_health_algorithm_data &rArr; reset_cur_sports_data &rArr; get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_step_counts_today
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sports_head
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sport_data
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_setting_head
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_head
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_data
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_cur_sports_data
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_success_event_observer
</UL>

<P><STRONG><a name="[0]"></a>LIS3DH_INT1_event_handler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LIS3DH_INT1_event_handler &rArr; sensor_timers_start &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_timers_start
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetInt1Src
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_disable
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_RESET_MEM
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_config_wake_int
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>LIS3DH_INT2_event_handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LIS3DH_INT2_event_handler &rArr; LIS3DH_GetClickResponse &rArr; LIS3DH_ReadReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_GetClickResponse
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>tap_timer_handler</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = tap_timer_handler &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_bonded
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[2d]"></a>sensor_timer_handle</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = sensor_timer_handle &rArr; click_algorithm_accelerate_data_in &rArr; compute_peak_feature &rArr; compute_peak_feature_core &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;health_algorithm_data_in_accelerate
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;click_algorithm_accelerate_data_in
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SquareRoot
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_GetFifoData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[188]"></a>save_quarter_distance_data</STRONG> (Thumb, 296 bytes, Stack size 32 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_group_data
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_curr_health_data
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minute_timer_handler
</UL>

<P><STRONG><a name="[130]"></a>minute_timer_handler</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = minute_timer_handler &rArr; update_sleep_status &rArr; two_Double_tap_handle &rArr; notification_start &rArr; show_step_task_complete_status &rArr; led_action_control &rArr; led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_step_counts_today
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sleep_status
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;health_algorithm_data_in_accelerate
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_quarter_distance_data
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_algorithm_timestamp
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_mode
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_wall_clock
</UL>

<P><STRONG><a name="[f5]"></a>set_daily_target_achieved</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_step_counter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
</UL>

<P><STRONG><a name="[27e]"></a>get_daily_target_achieved</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_step_counter.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>click_algorithm_cb_implement</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = click_algorithm_cb_implement &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_step_counter.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>start_click_algorithm</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bd_step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = start_click_algorithm &rArr; init_click_algorithm
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_click_algorithm_callback
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_click_algorithm
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[184]"></a>reset_sleep_data</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = reset_sleep_data &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_delay_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_health_algorithm_data
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_prev_user_data
</UL>

<P><STRONG><a name="[183]"></a>reset_sport_data</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = reset_sport_data &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_delay_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_health_algorithm_data
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_prev_user_data
</UL>

<P><STRONG><a name="[128]"></a>clear_prev_user_data</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = clear_prev_user_data &rArr; reset_sleep_setting &rArr; reset_sleep_setting_head &rArr; update_sleep_setting_head &rArr; get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_setting
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sport_data
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_data
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_press_handle
</UL>

<P><STRONG><a name="[18f]"></a>get_flash_page_number</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = get_flash_page_number &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_need_erase_sport_page_for_when_boot
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_need_erase_sleep_page_for_when_boot
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_sport_write_group_address
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_sport_read_group_address
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_sleep_write_group_address
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_sleep_read_group_address
</UL>

<P><STRONG><a name="[bb]"></a>check_need_erase_sleep_page_for_when_boot</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = check_need_erase_sleep_page_for_when_boot &rArr; get_flash_page_number &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_page_number
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bc]"></a>check_need_erase_sport_page_for_when_boot</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = check_need_erase_sport_page_for_when_boot &rArr; get_flash_page_number &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_page_number
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19a]"></a>have_sleep_group_to_send</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bd_sync_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
</UL>

<P><STRONG><a name="[19b]"></a>have_sleep_data_in_ram_to_send</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bd_sync_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
</UL>

<P><STRONG><a name="[190]"></a>get_next_sleep_read_group_address</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = get_next_sleep_read_group_address &rArr; get_flash_page_number &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_page_number
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sleep_group_data
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sleep_flash_cb
</UL>

<P><STRONG><a name="[191]"></a>get_next_sleep_write_group_address</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_next_sleep_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_delay_erase
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_page_number
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sleep_group_data
</UL>

<P><STRONG><a name="[19c]"></a>have_sport_group_to_send</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bd_sync_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
</UL>

<P><STRONG><a name="[1a1]"></a>have_sport_data_in_ram_to_send</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, bd_sync_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
</UL>

<P><STRONG><a name="[19d]"></a>have_history_sport_data_in_ram_to_send</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bd_sync_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
</UL>

<P><STRONG><a name="[192]"></a>get_next_sport_read_group_address</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = get_next_sport_read_group_address &rArr; get_flash_page_number &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_page_number
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sport_group_data
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sport_flash_cb
</UL>

<P><STRONG><a name="[193]"></a>get_next_sport_write_group_address</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_delay_erase
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_page_number
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_group_data
</UL>

<P><STRONG><a name="[189]"></a>save_sport_group_data</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_sport_write_group_address
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sport_data_buffer_header
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_block_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_curr_health_data
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_quarter_distance_data
</UL>

<P><STRONG><a name="[195]"></a>start_send_data_timer</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = start_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data_callback
</UL>

<P><STRONG><a name="[196]"></a>send_sport_data_from_ram</STRONG> (Thumb, 258 bytes, Stack size 24 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = send_sport_data_from_ram &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sport_data_buffer_header
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_quarter_calories
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_quarter_distance
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
</UL>

<P><STRONG><a name="[199]"></a>send_sleep_group_data</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = send_sleep_group_data &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_sleep_read_group_address
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
</UL>

<P><STRONG><a name="[eb]"></a>send_all_data</STRONG> (Thumb, 384 bytes, Stack size 32 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = send_all_data &rArr; start_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_setting_count
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sleep_setting_data
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sport_group_data
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sleep_group_data
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sport_data_from_ram
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_send_data_timer
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;have_history_sport_data_in_ram_to_send
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;have_sport_data_in_ram_to_send
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;have_sport_group_to_send
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;have_sleep_data_in_ram_to_send
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;have_sleep_group_to_send
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_data_buffer_header
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_last_time_sleep_mode
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_HealthData_command
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_timeout
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data_callback
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_sleep_event
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_distance_event
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_event_handle_schedule
</UL>

<P><STRONG><a name="[1a3]"></a>update_sleep_head</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = update_sleep_head &rArr; get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data_callback
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_head
</UL>

<P><STRONG><a name="[17f]"></a>reset_cur_sports_data</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = reset_cur_sports_data &rArr; get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_health_algorithm_data
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restart_health_algorithm
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data_callback
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cur_sports_data
</UL>

<P><STRONG><a name="[1a5]"></a>update_cur_sports_data</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bd_sync_data.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_cur_sports_data
</UL>

<P><STRONG><a name="[1a6]"></a>update_sports_head</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = update_sports_head &rArr; get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data_callback
</UL>

<P><STRONG><a name="[47]"></a>send_all_data_callback</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = send_all_data_callback &rArr; send_all_data &rArr; start_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sleep_setting_data_cb
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sports_head
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sleep_head
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_send_data_timer
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sport_flash_cb
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sleep_flash_cb
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_cur_sports_data
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 2]<UL><LI> bd_sync_data.o(.text)
<LI> bd_switch_sleep.o(.text)
</UL>
<P><STRONG><a name="[1a0]"></a>send_sport_group_data</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = send_sport_group_data &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_sport_read_group_address
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
</UL>

<P><STRONG><a name="[180]"></a>reset_sleep_head</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = reset_sleep_head &rArr; update_sleep_head &rArr; get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sleep_head
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_health_algorithm_data
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restart_health_algorithm
</UL>

<P><STRONG><a name="[7a]"></a>set_sport_data_sync_process_send</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bd_sync_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[17e]"></a>reset_sports_head</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = reset_sports_head &rArr; get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_health_algorithm_data
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restart_health_algorithm
</UL>

<P><STRONG><a name="[1a8]"></a>save_sleep_group_data</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = save_sleep_group_data &rArr; get_next_sleep_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_sleep_write_group_address
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_data_buffer_header
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_block_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_curr_health_data
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_evt_handler
</UL>

<P><STRONG><a name="[1c0]"></a>get_current_sleep_data</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bd_sync_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sleep_status
</UL>

<P><STRONG><a name="[176]"></a>sleep_evt_handler</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sleep_evt_handler &rArr; save_sleep_group_data &rArr; get_next_sleep_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sleep_group_data
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_time_to_Second
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_sleep_event
</UL>

<P><STRONG><a name="[1a9]"></a>save_curr_health_data</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sleep_settings_to_flash
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sleep_group_data
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_group_data
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_quarter_distance_data
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
</UL>

<P><STRONG><a name="[bd]"></a>check_sports_data_in_flash</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = check_sports_data_in_flash &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[be]"></a>check_sleep_data_in_flash</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = check_sleep_data_in_flash &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>send_data_timeout</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = send_data_timeout &rArr; send_all_data &rArr; start_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_sync_data.o(.text)
</UL>
<P><STRONG><a name="[6f]"></a>create_send_data_timer</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = create_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_create
</UL>

<P><STRONG><a name="[109]"></a>set_data_sending_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_sync_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_firmware_update_command
</UL>

<P><STRONG><a name="[108]"></a>get_data_sending_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_sync_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_firmware_update_command
</UL>

<P><STRONG><a name="[87]"></a>notification_start</STRONG> (Thumb, 198 bytes, Stack size 8 bytes, bd_interaction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = notification_start &rArr; show_step_task_complete_status &rArr; led_action_control &rArr; led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_control
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_action_control_start
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_curr_sleep_flag
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_step_task_complete_status
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_animation_status
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_private_bond_command
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2_frame_resolve
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tap_timer_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_distance_event
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_alarm
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_Double_tap_handle
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_press_handle
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_event_handle_schedule
</UL>

<P><STRONG><a name="[11e]"></a>notification_stop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bd_interaction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = notification_stop &rArr; motor_action_control_stop &rArr; app_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_action_control_stop
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_event_handle_schedule
</UL>

<P><STRONG><a name="[d5]"></a>get_battery_voltage_adjustment</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bd_charging.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[72]"></a>update_charging_status</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bd_charging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = update_charging_status &rArr; show_charging_percentage &rArr; led_action_control &rArr; led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_charging_percentage
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_stop
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_up
</UL>

<P><STRONG><a name="[73]"></a>charger_status</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, bd_charging.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_connected
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_adc_read_once
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_percentage
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_stop
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function_chargingcomplete_event_handler
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function_charger_event_handler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_framework_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_up
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_control_with_interval
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_event_handle_schedule
</UL>

<P><STRONG><a name="[2]"></a>function_charger_event_handler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, bd_charging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = function_charger_event_handler &rArr; show_charging_percentage &rArr; led_action_control &rArr; led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_status
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_stop
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_status
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_charging_percentage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>function_chargingcomplete_event_handler</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, bd_charging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = function_chargingcomplete_event_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_status
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[9b]"></a>charger_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bd_charging.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init1
</UL>

<P><STRONG><a name="[aa]"></a>charger_framework_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bd_charging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = charger_framework_init &rArr; show_charging_percentage &rArr; led_action_control &rArr; led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_status
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_charging_percentage
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[dc]"></a>charger_connected</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, bd_charging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = charger_connected
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_status
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_detect_n_precharging
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_wfi
</UL>

<P><STRONG><a name="[e3]"></a>bd_crc16</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, bd_crc16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bd_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_crc_check
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_resend_package
</UL>

<P><STRONG><a name="[185]"></a>SquareRoot</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bd_square_root.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_timer_handle
</UL>

<P><STRONG><a name="[1ab]"></a>motor_action_control_start</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, bd_level_drive_motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = motor_action_control_start &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_virbrate_stop
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_virbrate_start
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
</UL>

<P><STRONG><a name="[10f]"></a>motor_action_control_stop</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bd_level_drive_motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = motor_action_control_stop &rArr; app_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_virbrate_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2_frame_resolve
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_stop
</UL>

<P><STRONG><a name="[70]"></a>motor_control_framework_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bd_level_drive_motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = motor_control_framework_init &rArr; app_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_create
</UL>

<P><STRONG><a name="[98]"></a>motor_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bd_level_drive_motor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init1
</UL>

<P><STRONG><a name="[77]"></a>is_factory_test_done</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = is_factory_test_done
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_test
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootup_check
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_devinfo_serv_init
</UL>

<P><STRONG><a name="[1b2]"></a>get_sensor_data</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = get_sensor_data &rArr; hal_acc_GetFifoData &rArr; LIS3DH_GetFifoSourceFSS &rArr; LIS3DH_ReadReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_GetFifoData
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_sensor_data
</UL>

<P><STRONG><a name="[1b3]"></a>sensor_test</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = sensor_test &rArr; hal_acc_GetFifoData &rArr; LIS3DH_GetFifoSourceFSS &rArr; LIS3DH_ReadReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_GetFifoData
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootup_check
</UL>

<P><STRONG><a name="[1b4]"></a>all_led_flash</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = all_led_flash &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_test
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootup_check
</UL>

<P><STRONG><a name="[b3]"></a>bootup_check</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = bootup_check &rArr; sensor_test &rArr; hal_acc_GetFifoData &rArr; LIS3DH_GetFifoSourceFSS &rArr; LIS3DH_ReadReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_factory_test_done
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_led_flash
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_test
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>system_off</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = system_off &rArr; sd_system_off &rArr; hal_acc_PowerDown &rArr; LIS3DH_SetMode &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_system_off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_factory_test.o(.text)
</UL>
<P><STRONG><a name="[1b6]"></a>vibrator_test</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vibrator_test &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_test
</UL>

<P><STRONG><a name="[1b7]"></a>send_package</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = send_package &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_charge
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_sensor_data
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_echo
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sn
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flag
</UL>

<P><STRONG><a name="[4a]"></a>send_callback</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bd_factory_test.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bd_factory_test.o(.text)
</UL>
<P><STRONG><a name="[1b9]"></a>generate_l2_package</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = generate_l2_package
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_charge
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_sensor_data
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_echo
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sn
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flag
</UL>

<P><STRONG><a name="[4b]"></a>write_flash_handler</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = write_flash_handler &rArr; ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_word_write
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_block_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_factory_test.o(.text)
</UL>
<P><STRONG><a name="[1b8]"></a>write_test_flag</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = write_test_flag &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_test
</UL>

<P><STRONG><a name="[4c]"></a>read_flag</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = read_flag &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_l2_package
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_package
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_factory_test.o(.text)
</UL>
<P><STRONG><a name="[1ba]"></a>write_sn</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = write_sn &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_test
</UL>

<P><STRONG><a name="[4d]"></a>read_sn</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = read_sn &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_l2_package
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_package
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_factory_test.o(.text)
</UL>
<P><STRONG><a name="[4e]"></a>request_echo</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = request_echo &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_l2_package
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_package
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_factory_test.o(.text)
</UL>
<P><STRONG><a name="[51]"></a>request_sensor_data</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = request_sensor_data &rArr; send_package &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_l2_package
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_package
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sensor_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_factory_test.o(.text)
</UL>
<P><STRONG><a name="[1bc]"></a>enter_test_mode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bd_factory_test.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_test
</UL>

<P><STRONG><a name="[1bb]"></a>exit_test_mode</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = exit_test_mode &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_test
</UL>

<P><STRONG><a name="[50]"></a>request_charge</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = request_charge &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_l2_package
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_package
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_factory_test.o(.text)
</UL>
<P><STRONG><a name="[10d]"></a>do_test</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, bd_factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = do_test &rArr; write_sn &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_factory_test_done
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit_test_mode
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_test_mode
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_sn
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_test_flag
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vibrator_test
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_led_flash
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2_frame_resolve
</UL>

<P><STRONG><a name="[1bd]"></a>power_wfi</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bd_low_power_mode.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_connected
</UL>

<P><STRONG><a name="[b2]"></a>power_system_off</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bd_low_power_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = power_system_off &rArr; hal_acc_PowerDown &rArr; LIS3DH_SetMode &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_PowerDown
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b5]"></a>sd_system_off</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bd_low_power_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = sd_system_off &rArr; hal_acc_PowerDown &rArr; LIS3DH_SetMode &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_PowerDown
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_off
</UL>

<P><STRONG><a name="[1c2]"></a>update_last_time_sleep_mode</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sleep_setting_data_cb
</UL>

<P><STRONG><a name="[1ea]"></a>get_last_sleep_setting_event</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_backup_info_from_flash
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
</UL>

<P><STRONG><a name="[1e9]"></a>get_last_sleep_setting_event_head</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_backup_info_from_flash
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
</UL>

<P><STRONG><a name="[1be]"></a>prepare_sleep_event_header</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prepare_sleep_event_header
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_last_time_sleep_mode
</UL>

<P><STRONG><a name="[11a]"></a>send_last_time_sleep_mode</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = send_last_time_sleep_mode &rArr; send_all_data &rArr; start_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prepare_sleep_event_header
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_private_bond_command
</UL>

<P><STRONG><a name="[1eb]"></a>set_curr_sleep_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_backup_info_from_flash
</UL>

<P><STRONG><a name="[1ac]"></a>get_curr_sleep_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
</UL>

<P><STRONG><a name="[1bf]"></a>switch_sleep_state</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = switch_sleep_state &rArr; convert_time_to_Second &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_time_to_Second
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_Double_tap_handle
</UL>

<P><STRONG><a name="[11c]"></a>two_Double_tap_handle</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = two_Double_tap_handle &rArr; notification_start &rArr; show_step_task_complete_status &rArr; led_action_control &rArr; led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time_counter
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_sleep_state
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sleep_status
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_event_handle_schedule
</UL>

<P><STRONG><a name="[18a]"></a>update_sleep_status</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = update_sleep_status &rArr; two_Double_tap_handle &rArr; notification_start &rArr; show_step_task_complete_status &rArr; led_action_control &rArr; led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_step_counts_today
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_sleep_data
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time_counter
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_Double_tap_handle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minute_timer_handler
</UL>

<P><STRONG><a name="[1c1]"></a>update_sleep_setting_head</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = update_sleep_setting_head &rArr; get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sleep_setting_data_cb
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_setting_head
</UL>

<P><STRONG><a name="[181]"></a>reset_sleep_setting_head</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = reset_sleep_setting_head &rArr; update_sleep_setting_head &rArr; get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sleep_setting_head
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_health_algorithm_data
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restart_health_algorithm
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_setting
</UL>

<P><STRONG><a name="[18e]"></a>reset_sleep_setting</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = reset_sleep_setting &rArr; reset_sleep_setting_head &rArr; update_sleep_setting_head &rArr; get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_delay_erase
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_setting_head
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_prev_user_data
</UL>

<P><STRONG><a name="[1a7]"></a>send_sleep_setting_data_cb</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = send_sleep_setting_data_cb &rArr; update_sleep_setting_head &rArr; get_wall_clock_time &rArr; ConvertToUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sleep_setting_head
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_last_time_sleep_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data_callback
</UL>

<P><STRONG><a name="[1aa]"></a>save_sleep_settings_to_flash</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = save_sleep_settings_to_flash &rArr; bd_flash_write_erased_page &rArr; ble_flash_word_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_write_erased_page
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_curr_health_data
</UL>

<P><STRONG><a name="[b5]"></a>restore_SleepSettingsFromFlash</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = restore_SleepSettingsFromFlash &rArr; ble_flash_page_read &rArr; ble_flash_crc16_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_read
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c5]"></a>send_sleep_setting_data_in_ram</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = send_sleep_setting_data_in_ram &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sleep_setting_data
</UL>

<P><STRONG><a name="[19f]"></a>send_sleep_setting_data</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = send_sleep_setting_data &rArr; send_sleep_setting_data_in_ram &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sleep_setting_data_in_ram
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
</UL>

<P><STRONG><a name="[119]"></a>sleep_setting_count</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bd_switch_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_private_bond_command
</UL>

<P><STRONG><a name="[a0]"></a>wdt_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bd_wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[c2]"></a>wdt_start</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bd_wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c4]"></a>wdt_feed</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bd_wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_wall_clock
</UL>

<P><STRONG><a name="[27f]"></a>wdt_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bd_wdt.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>get_stack_dump_command_resolve</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, bd_stack_dump_repoter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = get_stack_dump_command_resolve &rArr; report_get_dump_info_fail &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_delay_erase
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_get_dump_info_fail
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_read
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2_frame_resolve
</UL>

<P><STRONG><a name="[12f]"></a>get_alarm_number</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;return_alarm_list
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_alarm
</UL>

<P><STRONG><a name="[f8]"></a>set_alarm_number</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
</UL>

<P><STRONG><a name="[12e]"></a>get_alarm</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;return_alarm_list
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_alarm
</UL>

<P><STRONG><a name="[f9]"></a>set_alarm</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
</UL>

<P><STRONG><a name="[fa]"></a>save_alarm</STRONG> (Thumb, 104 bytes, Stack size 88 bytes, bd_data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = save_alarm &rArr; save_alarms_into_flash &rArr; bd_flash_write_erased_page &rArr; ble_flash_word_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_delay_erase
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_is_flash_erased
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_read_page
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_alarms_into_flash
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
</UL>

<P><STRONG><a name="[b7]"></a>load_alarm</STRONG> (Thumb, 64 bytes, Stack size 80 bytes, bd_data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = load_alarm &rArr; bd_flash_read_page &rArr; ble_flash_page_read &rArr; ble_flash_crc16_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_read_page
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[182]"></a>get_user_profile</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restart_health_algorithm
</UL>

<P><STRONG><a name="[fe]"></a>set_user_profile</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
</UL>

<P><STRONG><a name="[ff]"></a>save_user_profile</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, bd_data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = save_user_profile &rArr; save_profile_into_flash &rArr; bd_flash_write_erased_page &rArr; ble_flash_word_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_delay_erase
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_is_flash_erased
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_read_page
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_profile_into_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
</UL>

<P><STRONG><a name="[b8]"></a>load_user_profile</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, bd_data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = load_user_profile &rArr; bd_flash_read_page &rArr; ble_flash_page_read &rArr; ble_flash_crc16_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_read_page
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[174]"></a>get_daily_target</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_step_task_complete_status
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_distance_event
</UL>

<P><STRONG><a name="[fc]"></a>set_daily_target</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
</UL>

<P><STRONG><a name="[fd]"></a>save_daily_target</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bd_data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = save_daily_target &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_delay_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
</UL>

<P><STRONG><a name="[b9]"></a>load_daily_target</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bd_data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = load_daily_target &rArr; bd_flash_read_page &rArr; ble_flash_page_read &rArr; ble_flash_crc16_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_read_page
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cc]"></a>sync_data_to_flash</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bd_data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = sync_data_to_flash &rArr; save_alarms_into_flash &rArr; bd_flash_write_erased_page &rArr; ble_flash_word_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_profile_into_flash
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_alarms_into_flash
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_write_erased_page
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_erase_data_page
</UL>

<P><STRONG><a name="[104]"></a>reset_user_data_for_new_bond</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_success_event_observer
</UL>

<P><STRONG><a name="[103]"></a>set_global_dev_loss_controller_data</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_success_event_observer
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_backup_info_from_flash
</UL>

<P><STRONG><a name="[1ed]"></a>get_global_dev_loss_controller_data</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
</UL>

<P><STRONG><a name="[85]"></a>set_global_dev_loss_should_alert</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[83]"></a>get_global_dev_loss_should_alert</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[101]"></a>set_global_dev_loss_alert_level</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
</UL>

<P><STRONG><a name="[84]"></a>get_global_dev_loss_alert_level</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[ed]"></a>set_global_step_counts_today</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_health_algorithm_data
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_success_event_observer
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_HealthData_command
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_backup_info_from_flash
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_distance_event
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minute_timer_handler
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
</UL>

<P><STRONG><a name="[ec]"></a>get_global_step_counts_today</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_data_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_HealthData_command
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_step_task_complete_status
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sleep_status
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_distance_event
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
</UL>

<P><STRONG><a name="[116]"></a>set_bluetooth_log_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_bluetooth_log.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_l0_reset
</UL>

<P><STRONG><a name="[280]"></a>get_bluetooth_log_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_bluetooth_log.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>log_send_callback</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bd_bluetooth_log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = log_send_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_bluetooth_log.o(.text)
</UL>
<P><STRONG><a name="[1ce]"></a>bluetooth_log</STRONG> (Thumb, 176 bytes, Stack size 72 bytes, bd_bluetooth_log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[110]"></a>resolve_log_command_id</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bd_bluetooth_log.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2_frame_resolve
</UL>

<P><STRONG><a name="[c]"></a>Reset_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>LPCOMP_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SPI0_TWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>SWI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SWI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SWI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[281]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_nrf51.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>SystemInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_nrf51.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_manual_peripheral_setup_needed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[c6]"></a>ble_tps_init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ble_tps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_tps_init &rArr; tx_power_level_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_power_level_char_add
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[282]"></a>ble_tps_tx_power_level_set</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ble_tps.o(.text), UNUSED)

<P><STRONG><a name="[1d5]"></a>ble_srv_report_ref_encode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ble_srv_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_char_add
</UL>

<P><STRONG><a name="[75]"></a>ble_srv_ascii_to_utf8</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ble_srv_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_srv_ascii_to_utf8
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_devinfo_serv_init
</UL>

<P><STRONG><a name="[8f]"></a>ble_bas_on_ble_evt</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, ble_bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_bas_on_ble_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[ca]"></a>ble_bas_init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ble_bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ble_bas_init &rArr; battery_level_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_char_add
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
</UL>

<P><STRONG><a name="[71]"></a>ble_bas_battery_level_update</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, ble_bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_bas_battery_level_update
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_up
</UL>

<P><STRONG><a name="[78]"></a>ble_dis_init</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, ble_dis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = ble_dis_init &rArr; char_add &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_id_encode
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_add
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pnp_id_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_devinfo_serv_init
</UL>

<P><STRONG><a name="[1db]"></a>random_device_address_encode</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, ble_advdata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>

<P><STRONG><a name="[1dc]"></a>encode_device_class</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ble_advdata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
</UL>

<P><STRONG><a name="[65]"></a>ble_advdata_set</STRONG> (Thumb, 102 bytes, Stack size 88 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
</UL>

<P><STRONG><a name="[a6]"></a>ble_conn_params_init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_conn_params_init &rArr; app_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[1e3]"></a>ble_conn_params_stop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_conn_params.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>

<P><STRONG><a name="[8e]"></a>ble_conn_params_on_ble_evt</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_conn_params_on_ble_evt &rArr; conn_params_negotiation &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[1e6]"></a>ble_conn_params_change_conn_params</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, ble_conn_params.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_conn_params_ok
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[1e7]"></a>store_time_to_flash_v2</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, ble_debug_assert_handler.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_word_write
</UL>

<P><STRONG><a name="[1e8]"></a>get_stored_time_from_flash_v2</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, ble_debug_assert_handler.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
</UL>

<P><STRONG><a name="[b4]"></a>restore_backup_info_from_flash</STRONG> (Thumb, 436 bytes, Stack size 120 bytes, ble_debug_assert_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = restore_backup_info_from_flash &rArr; set_wall_clock_time_counter &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_step_counts_today
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_dev_loss_controller_data
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wall_clock_time_counter
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_crc16_compute
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_curr_sleep_flag
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_last_sleep_setting_event_head
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_last_sleep_setting_event
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ee]"></a>low_power_info_store</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_debug_assert_handler.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
</UL>

<P><STRONG><a name="[1ef]"></a>assert_pre_restart_info_store</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_debug_assert_handler.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
</UL>

<P><STRONG><a name="[e7]"></a>ota_pre_restart_info_store</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_debug_assert_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = ota_pre_restart_info_store &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trigger_ota_mode
</UL>

<P><STRONG><a name="[60]"></a>ble_debug_assert_handler</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ble_debug_assert_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_disable
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_log_write
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_is_flash_erased
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>

<P><STRONG><a name="[123]"></a>ble_flash_crc16_compute</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_flash_crc16_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_user_id_bonded
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_backup_info_from_flash
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_store_user_id
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_read_user_id
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_masters_store
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_attr_load_from_flash
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bonding_info_load_from_flash
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_attr_store
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_info_store
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_write
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_read
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_write_erased_page
</UL>

<P><STRONG><a name="[125]"></a>ble_flash_word_write</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_flash_word_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_write
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_store_user_id
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_handler
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_attr_store
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_info_store
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_time_to_flash_v2
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_write_erased_page
</UL>

<P><STRONG><a name="[124]"></a>ble_flash_block_write</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_write
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_store_user_id
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_handler
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sleep_group_data
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_group_data
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_attr_store
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_info_store
</UL>

<P><STRONG><a name="[94]"></a>ble_flash_page_erase</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_backup_info_from_flash
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_SleepSettingsFromFlash
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sports_data_in_flash
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sleep_data_in_flash
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_need_erase_sport_page_for_when_boot
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_need_erase_sleep_page_for_when_boot
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootup_check
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_store_user_id
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_masters_store
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_check
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_delay_erase
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_pages_erase
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_erase_data_page
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stored_time_from_flash_v2
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_time_to_flash_v2
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_log_read
</UL>

<P><STRONG><a name="[76]"></a>ble_flash_page_addr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ble_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_profile
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_daily_target
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_alarm
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_user_id_bonded
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_backup_info_from_flash
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_factory_test_done
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sports_data_in_flash
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sleep_data_in_flash
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootup_check
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_store_user_id
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_read_user_id
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_debug_assert_handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_devinfo_serv_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sn
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flag
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash_handler
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_setting
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sport_data
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_data
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_attr_load_from_flash
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bonding_info_load_from_flash
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_attr_store
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_info_store
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stored_time_from_flash_v2
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_time_to_flash_v2
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_write_erased_page
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_master_delete
</UL>

<P><STRONG><a name="[1c3]"></a>bd_flash_write_erased_page</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bd_flash_write_erased_page &rArr; ble_flash_word_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_word_write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_crc16_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sleep_settings_to_flash
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_data_to_flash
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_profile_into_flash
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_alarms_into_flash
</UL>

<P><STRONG><a name="[1c4]"></a>ble_flash_page_read</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_flash_page_read &rArr; ble_flash_crc16_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_crc16_compute
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stack_dump_command_resolve
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_SleepSettingsFromFlash
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_read_page
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_log_read
</UL>

<P><STRONG><a name="[1c9]"></a>bd_flash_read_page</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bd_flash_read_page &rArr; ble_flash_page_read &rArr; ble_flash_crc16_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_read
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_profile
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_alarm
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_user_profile
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_daily_target
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_alarm
</UL>

<P><STRONG><a name="[1ca]"></a>check_is_flash_erased</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ble_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_profile
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_alarm
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_debug_assert_handler
</UL>

<P><STRONG><a name="[1f5]"></a>ble_flash_page_write</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_flash_page_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_crc16_compute
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_write
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_log_write
</UL>

<P><STRONG><a name="[283]"></a>ble_flash_page_delay_erase_finished</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ble_flash.o(.text), UNUSED)

<P><STRONG><a name="[18d]"></a>ble_flash_page_delay_erase</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_bluetooth_status
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_profile
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_daily_target
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_alarm
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stack_dump_command_resolve
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_setting
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_sport_write_group_address
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_sleep_write_group_address
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sport_data
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_sleep_data
</UL>

<P><STRONG><a name="[56]"></a>ble_flash_erase_data_page</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ble_flash_erase_data_page &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_bluetooth_status
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_data_to_flash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_flash.o(.text)
</UL>
<P><STRONG><a name="[284]"></a>ble_radio_active</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_flash.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>ble_flash_on_radio_active_evt</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ble_flash_on_radio_active_evt &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_bluetooth_status
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[1f7]"></a>set_radio_active_flag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_disable
</UL>

<P><STRONG><a name="[1f1]"></a>radio_disable</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = radio_disable &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_radio_active_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_debug_assert_handler
</UL>

<P><STRONG><a name="[26]"></a>SWI1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ble_radio_notification.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>ble_radio_notification_init</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ble_radio_notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_radio_notification_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[69]"></a>set_global_bluetooth_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_radio_notification.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
</UL>

<P><STRONG><a name="[1f6]"></a>get_global_bluetooth_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_radio_notification.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_on_radio_active_evt
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_delay_erase
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_erase_data_page
</UL>

<P><STRONG><a name="[91]"></a>ble_stack_handler_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ble_stack_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_stack_handler_init
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[c9]"></a>intern_ble_stack_events_execute</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ble_stack_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = intern_ble_stack_events_execute &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_evt_get
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_IRQHandler
</UL>

<P><STRONG><a name="[27]"></a>SWI2_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ble_stack_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SWI2_IRQHandler &rArr; intern_ble_stack_events_execute &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_ble_stack_events_execute
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>app_button_init</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = app_button_init &rArr; app_gpiote_user_register &rArr; pins_sense_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_user_register
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[c1]"></a>app_button_enable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_button_enable &rArr; app_gpiote_user_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_user_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1fb]"></a>app_button_disable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_user_disable
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>

<P><STRONG><a name="[1fd]"></a>app_button_is_pushed</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, app_button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_pins_state_get
</UL>

<P><STRONG><a name="[17]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, app_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOTE_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>app_gpiote_init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, app_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_gpiote_init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[1f9]"></a>app_gpiote_user_register</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, app_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = app_gpiote_user_register &rArr; pins_sense_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pins_sense_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
</UL>

<P><STRONG><a name="[1fa]"></a>app_gpiote_user_enable</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, app_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = app_gpiote_user_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
</UL>

<P><STRONG><a name="[1fc]"></a>app_gpiote_user_disable</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pins_sense_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_disable
</UL>

<P><STRONG><a name="[1f8]"></a>app_gpiote_pins_state_get</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_is_pushed
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_delay_timeout_handler
</UL>

<P><STRONG><a name="[9a]"></a>app_sched_init</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, app_scheduler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = app_sched_init
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init1
</UL>

<P><STRONG><a name="[c5]"></a>app_sched_event_put</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, app_scheduler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_test
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tap_timer_handler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_on_radio_active_evt
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_receive_data
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_evt_schedule
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_evt_schedule
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_charge
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit_test_mode
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_echo
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sn
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_sn
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flag
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_test_flag
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_erase_data_page
</UL>

<P><STRONG><a name="[c3]"></a>app_sched_execute</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_scheduler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_sched_execute &rArr; app_sched_event_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_get
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_detect_n_precharging
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22]"></a>RTC1_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = RTC1_IRQHandler &rArr; timer_timeouts_check &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>SWI0_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 48 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SWI0_IRQHandler &rArr; list_insertions_handler &rArr; timer_list_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expired_timers_handler
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elapsed_ticks_acquire
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>app_timer_init</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_timer_init &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
</UL>

<P><STRONG><a name="[6e]"></a>app_timer_create</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_framework_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_flash_timer_init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_send_data_timer
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_l0_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_measure_init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_create
</UL>

<P><STRONG><a name="[7b]"></a>app_timer_start</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_system_clock
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;async_send
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_private_bond_command
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_firmware_update_command
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_measure_timer_start
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tap_timer_handler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_timers_start
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_receive_data
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_schedule_timer_handle
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_action_control_start
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_send_data_timer
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;click_algorithm_cb_implement
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wall_clock_time_counter
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_led_action_control_with_interval
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
</UL>

<P><STRONG><a name="[7e]"></a>app_timer_stop</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_system_clock
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_action_control_stop
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_async_send
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_private_bond_command
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_package_handle
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_measure_timer_stop
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_stop
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_l0_reset
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_receive_data
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_action_control_start
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_timers_stop
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wall_clock_time_counter
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_led_action_control_with_interval
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_press_handle
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_disable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_stop
</UL>

<P><STRONG><a name="[20c]"></a>app_timer_stop_all</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
</UL>

<P><STRONG><a name="[285]"></a>app_timer_cnt_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_timer.o(.text), UNUSED)

<P><STRONG><a name="[286]"></a>app_timer_cnt_diff_compute</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_timer.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>app_query_timer</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_l0_reset
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_receive_data
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_led_action_control_with_interval
</UL>

<P><STRONG><a name="[8d]"></a>ble_bondmngr_on_ble_evt</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ble_bondmngr_on_ble_evt &rArr; on_auth_status_from_new_master &rArr; bond_info_store &rArr; ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_sec_update
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_sec_info_request
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_update
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_connect
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_find_in_db
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_auth_status_from_new_master
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_sys_attr_set
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[89]"></a>ble_bondmngr_bonded_masters_store</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_bondmngr_bonded_masters_store &rArr; sys_attr_store &rArr; ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_crc16_compute
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_update
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_attr_store
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_info_store
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[21c]"></a>ble_bondmngr_sys_attr_store</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ble_bondmngr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_attr_store
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[88]"></a>ble_bondmngr_bonded_masters_delete</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_bondmngr_bonded_masters_delete &rArr; flash_pages_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_pages_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[21e]"></a>ble_bondmngr_master_addr_get</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ble_bondmngr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[68]"></a>ble_bondmngr_whitelist_get</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ble_bondmngr_whitelist_get
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
</UL>

<P><STRONG><a name="[a3]"></a>ble_bondmngr_init</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ble_bondmngr_init &rArr; load_all_from_flash &rArr; sys_attr_load_from_flash &rArr; ble_flash_crc16_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_pages_erase
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_all_from_flash
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[287]"></a>ble_bondmngr_master_ids_get</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, ble_bondmngr.o(.text), UNUSED)

<P><STRONG><a name="[21f]"></a>ble_bondmngr_bonded_master_delete</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_bondmngr_bonded_master_delete &rArr; sys_attr_store &rArr; ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_pages_erase
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_whitelist
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_attr_store
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_info_store
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_masters_check
</UL>

<P><STRONG><a name="[288]"></a>ble_bondmngr_is_link_encrypted</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_bondmngr.o(.text), UNUSED)

<P><STRONG><a name="[289]"></a>bond_manager_get_first_bonded_master_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_bondmngr.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>ble_bondmngr_bonded_masters_check</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_bondmngr_bonded_masters_check &rArr; ble_bondmngr_bonded_master_delete &rArr; sys_attr_store &rArr; ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_master_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[1f2]"></a>ble_error_log_write</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ble_error_log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_error_log_write &rArr; ble_flash_page_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_write
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_debug_assert_handler
</UL>

<P><STRONG><a name="[221]"></a>ble_error_log_read</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ble_error_log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_read
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_log_init
</UL>

<P><STRONG><a name="[28a]"></a>ble_error_log_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_error_log.o(.text), UNUSED)

<P><STRONG><a name="[222]"></a>ble_error_log_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ble_error_log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_log_read
</UL>

<P><STRONG><a name="[18b]"></a>init_click_algorithm</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, click-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_click_algorithm
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_click_algorithm
</UL>

<P><STRONG><a name="[28b]"></a>click_algorithm_finalize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, click-algorithm.o(.text), UNUSED)

<P><STRONG><a name="[18c]"></a>register_click_algorithm_callback</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, click-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_click_algorithm
</UL>

<P><STRONG><a name="[28c]"></a>click_algorithm_error_desc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, click-algorithm.o(.text), UNUSED)

<P><STRONG><a name="[229]"></a>generate_click_event</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, click-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = generate_click_event
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;click_algorithm_accelerate_data_in
</UL>

<P><STRONG><a name="[186]"></a>click_algorithm_accelerate_data_in</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, click-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = click_algorithm_accelerate_data_in &rArr; compute_peak_feature &rArr; compute_peak_feature_core &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_click_event
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detect_peak
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_peak_feature
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_timer_handle
</UL>

<P><STRONG><a name="[28d]"></a>health_algorithm_get_error_desc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, health-algorithm-inner.o(.text), UNUSED)

<P><STRONG><a name="[17c]"></a>init_health_algorithm</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, health-algorithm-inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = init_health_algorithm
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_health_algorithm
</UL>

<P><STRONG><a name="[177]"></a>health_algorithm_finalize</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, health-algorithm-inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = health_algorithm_finalize
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_health_algorithm
</UL>

<P><STRONG><a name="[17d]"></a>register_health_algorithm_callback</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, health-algorithm-inner.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_health_algorithm
</UL>

<P><STRONG><a name="[187]"></a>health_algorithm_data_in_accelerate</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, health-algorithm-inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = health_algorithm_data_in_accelerate
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_timer_handle
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minute_timer_handler
</UL>

<P><STRONG><a name="[22d]"></a>generate_event</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, health-algorithm-inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = generate_event
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_FireEvent
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distance_algorithm_accelerate_data_in
</UL>

<P><STRONG><a name="[8]"></a>init_distance_algorithm</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, distance-calculate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_distance_algorithm
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step_count_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> health-algorithm-inner.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>distance_algorithm_finalize</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, distance-calculate.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> health-algorithm-inner.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>distance_algorithm_error_desc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, distance-calculate.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> health-algorithm-inner.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>distance_algorithm_accelerate_data_in</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, distance-calculate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = distance_algorithm_accelerate_data_in &rArr; get_step_data &rArr; peak_detect &rArr; peak_detect_step &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_step_data
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_distance_data
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> health-algorithm-inner.o(.data)
</UL>
<P><STRONG><a name="[22e]"></a>RollDetector_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RollDetector_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Init
</UL>

<P><STRONG><a name="[242]"></a>RollDetector_Activate</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_OnEvent
</UL>

<P><STRONG><a name="[22f]"></a>RollDetector_DeActivate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RollDetector_DeActivate
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_OnEvent
</UL>

<P><STRONG><a name="[23c]"></a>RollDetector_IsActive</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Add
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Padding
</UL>

<P><STRONG><a name="[23e]"></a>RollDetector_InFuture</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RollDetector_InFuture
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Add
</UL>

<P><STRONG><a name="[23f]"></a>RollDetector_IsOutdated</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Add
</UL>

<P><STRONG><a name="[231]"></a>RollDetector_DumpSummedAcceleration</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_Padding
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_Add
</UL>

<P><STRONG><a name="[230]"></a>RollDetector_Add</STRONG> (Thumb, 84 bytes, Stack size 36 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RollDetector_Add
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_DumpSummedAcceleration
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Add
</UL>

<P><STRONG><a name="[232]"></a>RollDetector_Padding</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RollDetector_Padding
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_DumpSummedAcceleration
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_HandlePeriod
</UL>

<P><STRONG><a name="[233]"></a>RollDetector_BuildPeriod</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RollDetector_BuildPeriod &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_HandlePeriod
</UL>

<P><STRONG><a name="[237]"></a>RollDetector_IsRolled</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RollDetector_IsRolled
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_HandlePeriod
</UL>

<P><STRONG><a name="[238]"></a>RollDetector_Slide2Next</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RollDetector_Slide2Next
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_HandlePeriod
</UL>

<P><STRONG><a name="[23a]"></a>EpochMaker_StartNewEpoch</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Slide2Next
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Init
</UL>

<P><STRONG><a name="[251]"></a>EpochMaker_InFuture</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = EpochMaker_InFuture
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_Add
</UL>

<P><STRONG><a name="[252]"></a>EpochMaker_IsOutdated</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_Add
</UL>

<P><STRONG><a name="[234]"></a>EpochMaker_InThreshold</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EpochMaker_InThreshold
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABS
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Add
</UL>

<P><STRONG><a name="[236]"></a>EpochMaker_HandlePeriod</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EpochMaker_HandlePeriod &rArr; RollDetector_BuildPeriod &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_Slide2Next
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_IsRolled
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_BuildPeriod
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_Padding
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Add
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Padding
</UL>

<P><STRONG><a name="[239]"></a>EpochMaker_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EpochMaker_Init &rArr; RollDetector_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_StartNewEpoch
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_Init
</UL>

<P><STRONG><a name="[23b]"></a>EpochMaker_Padding</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = EpochMaker_Padding &rArr; EpochMaker_HandlePeriod &rArr; RollDetector_BuildPeriod &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_HandlePeriod
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_IsActive
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_HandleEpoch
</UL>

<P><STRONG><a name="[23d]"></a>EpochMaker_Add</STRONG> (Thumb, 88 bytes, Stack size 48 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = EpochMaker_Add &rArr; EpochMaker_HandlePeriod &rArr; RollDetector_BuildPeriod &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_HandlePeriod
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_InThreshold
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_Add
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_IsOutdated
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_InFuture
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_IsActive
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_Add
</UL>

<P><STRONG><a name="[24d]"></a>EpochMaker_Fill</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_HandleEpoch
</UL>

<P><STRONG><a name="[240]"></a>EpochMaker_Slide2Next</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_StartNewEpoch
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_HandleEpoch
</UL>

<P><STRONG><a name="[241]"></a>EpochMaker_OnEvent</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EpochMaker_OnEvent &rArr; RollDetector_DeActivate
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_DeActivate
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_HandleEvent
</UL>

<P><STRONG><a name="[246]"></a>EpochBuffer_ForwardCursor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_Extend
</UL>

<P><STRONG><a name="[244]"></a>EpochBuffer_ShiftCursor</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_Extend
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_IsSleeping
</UL>

<P><STRONG><a name="[243]"></a>EpochBuffer_IsSleeping</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EpochBuffer_IsSleeping
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_ShiftCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_DetectStateAtCursor
</UL>

<P><STRONG><a name="[248]"></a>EpochBuffer_IsRolling</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_DetectStateAtCursor
</UL>

<P><STRONG><a name="[24f]"></a>EpochBuffer_Init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_Init
</UL>

<P><STRONG><a name="[245]"></a>EpochBuffer_Extend</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EpochBuffer_Extend
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_ShiftCursor
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_ForwardCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_HandleEpoch
</UL>

<P><STRONG><a name="[247]"></a>EpochBuffer_DetectStateAtCursor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EpochBuffer_DetectStateAtCursor &rArr; EpochBuffer_IsSleeping
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_IsRolling
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_IsSleeping
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_HandleEvent
</UL>

<P><STRONG><a name="[24b]"></a>EpochBuffer_GetTimestampAtCursor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_HandleEvent
</UL>

<P><STRONG><a name="[249]"></a>EventMonitor_FireEvent</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = EventMonitor_FireEvent &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_event
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_Init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_HandleEvent
</UL>

<P><STRONG><a name="[24a]"></a>EventMonitor_HandleEvent</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = EventMonitor_HandleEvent &rArr; EventMonitor_FireEvent &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_FireEvent
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_GetTimestampAtCursor
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_DetectStateAtCursor
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_OnEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_HandleEpoch
</UL>

<P><STRONG><a name="[24c]"></a>EventMonitor_HandleEpoch</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = EventMonitor_HandleEpoch &rArr; EventMonitor_HandleEvent &rArr; EventMonitor_FireEvent &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_HandleEvent
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_Extend
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Slide2Next
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Fill
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Padding
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_Quit
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_Add
</UL>

<P><STRONG><a name="[24e]"></a>EventMonitor_Init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = EventMonitor_Init &rArr; EventMonitor_FireEvent &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_FireEvent
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochBuffer_Init
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_algorithm_accelerate_data_in
</UL>

<P><STRONG><a name="[250]"></a>EventMonitor_Add</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = EventMonitor_Add &rArr; EventMonitor_HandleEpoch &rArr; EventMonitor_HandleEvent &rArr; EventMonitor_FireEvent &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_HandleEpoch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_Add
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_IsOutdated
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_InFuture
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_algorithm_accelerate_data_in
</UL>

<P><STRONG><a name="[253]"></a>EventMonitor_Quit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EventMonitor_Quit &rArr; EventMonitor_HandleEpoch &rArr; EventMonitor_HandleEvent &rArr; EventMonitor_FireEvent &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_HandleEpoch
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_detect_finalize
</UL>

<P><STRONG><a name="[4]"></a>init_sleep_algorithm</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> health-algorithm-inner.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>sleep_algorithm_accelerate_data_in</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = sleep_algorithm_accelerate_data_in &rArr; EventMonitor_Add &rArr; EventMonitor_HandleEpoch &rArr; EventMonitor_HandleEvent &rArr; EventMonitor_FireEvent &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_Add
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> health-algorithm-inner.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>sleep_detect_finalize</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = sleep_detect_finalize &rArr; EventMonitor_Quit &rArr; EventMonitor_HandleEpoch &rArr; EventMonitor_HandleEvent &rArr; EventMonitor_FireEvent &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_Quit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> health-algorithm-inner.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>sleep_detect_error_desc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> health-algorithm-inner.o(.data)
</UL>
<P><STRONG><a name="[22a]"></a>step_count_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, distance-step.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_distance_algorithm
</UL>

<P><STRONG><a name="[22b]"></a>get_step_data</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, distance-step.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = get_step_data &rArr; peak_detect &rArr; peak_detect_step &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_detect
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distance_algorithm_accelerate_data_in
</UL>

<P><STRONG><a name="[22c]"></a>get_distance_data</STRONG> (Thumb, 590 bytes, Stack size 104 bytes, distance-steplength.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = get_distance_data &rArr; calc_charact &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_charact
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distance_algorithm_accelerate_data_in
</UL>

<P><STRONG><a name="[28e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_system_clock
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_adc_read_once_for_charging_detect
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_adc_read_once
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_need_erase_sport_page_for_when_boot
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_need_erase_sleep_page_for_when_boot
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_charging_percentage
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_step_task_complete_status
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_page_number
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_sleep_status
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_evt_handler
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_cur_sports_data
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minute_timer_handler
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_time_to_Second
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_day_of_week
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertToUTCTime
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_wall_clock
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_schedule_timer_handle
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_Double_tap_handle
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_attr_store
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_info_store
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_sleep_state
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[28f]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sport_data_from_ram
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_evt_handler
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;click_algorithm_accelerate_data_in
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_quarter_distance_data
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_charact
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_peak
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_detect_step
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_step
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seven_step_detect
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_BuildPeriod
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_distance_data
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distance_algorithm_accelerate_data_in
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_idx
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_peak_feature_core
</UL>

<P><STRONG><a name="[226]"></a>__aeabi_ldivmod</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_detect_step
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMonitor_FireEvent
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_distance_data
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distance_algorithm_accelerate_data_in
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_peak_feature_core
</UL>

<P><STRONG><a name="[17a]"></a>__aeabi_lmul</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_algorithm_timestamp
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_detect_step
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_distance_data
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distance_algorithm_accelerate_data_in
</UL>

<P><STRONG><a name="[290]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[291]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_device_address_encode
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[292]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[114]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stack_dump_command_resolve
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_private_bond_command
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_backup_info_from_flash
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_SleepSettingsFromFlash
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_receive_data
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sleep_settings_to_flash
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_sec_info_request
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_update
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_connect
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_auth_status_from_new_master
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_restart_info_store
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_change_conn_params
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_master_addr_get
</UL>

<P><STRONG><a name="[126]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_backup_info_from_flash
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_alarm
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_read_user_id
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_update
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_attr_load_from_flash
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bonding_info_load_from_flash
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_update
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_connect
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_all_from_flash
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_find_in_db
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_auth_status_from_new_master
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_log_write
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_alarms_into_flash
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_read
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_master_delete
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_sys_attr_store
</UL>

<P><STRONG><a name="[293]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[25e]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[294]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[295]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1cd]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_log
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_send_callback
</UL>

<P><STRONG><a name="[63]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_char_add
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_char_add
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_alarm
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_on_ble_evt
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_devinfo_serv_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_update
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_add
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_char_add
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_power_level_char_add
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_DeActivate
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RollDetector_Init
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_master_delete
</UL>

<P><STRONG><a name="[296]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[25f]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1f0]"></a>strncpy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_debug_assert_handler
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_log_write
</UL>

<P><STRONG><a name="[1d0]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_ascii_to_utf8
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_log
</UL>

<P><STRONG><a name="[129]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_alarm
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_user_id_bonded
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_connect
</UL>

<P><STRONG><a name="[1c7]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_get_dump_info_fail
</UL>

<P><STRONG><a name="[d2]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_percentage
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[d0]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_percentage
</UL>

<P><STRONG><a name="[262]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[d1]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_percentage
</UL>

<P><STRONG><a name="[cf]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_percentage
</UL>

<P><STRONG><a name="[cd]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_percentage
</UL>

<P><STRONG><a name="[d3]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_percentage
</UL>

<P><STRONG><a name="[ce]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_percentage
</UL>

<P><STRONG><a name="[25d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[297]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[261]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[260]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[263]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[267]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[268]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[269]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[26a]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[26b]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[272]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[298]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[264]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[299]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[266]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[265]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[29a]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[29b]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[26e]"></a>__0snprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[29c]"></a>__1snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[1cf]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_log
</UL>

<P><STRONG><a name="[29d]"></a>__c89snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[29e]"></a>snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[270]"></a>__0vsnprintf</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[29f]"></a>__1vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[2a0]"></a>__2vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[2a1]"></a>__c89vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[1d1]"></a>vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_log
</UL>

<P><STRONG><a name="[26d]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[224]"></a>__ARM_common_ll_mulss</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, click-algorithm.o(i.__ARM_common_ll_mulss))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_common_ll_mulss
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_detect_step
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_peak_feature_core
</UL>

<P><STRONG><a name="[120]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bd_led_flash.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_test
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data_callback
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_led_action_control_with_interval
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_schedule_timer_handle
</UL>

<P><STRONG><a name="[2a2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2a3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2a4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[62]"></a>advertising_init</STRONG> (Thumb, 186 bytes, Stack size 112 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = advertising_init &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
</UL>

<P><STRONG><a name="[67]"></a>advertising_start</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = advertising_start &rArr; advertising_init &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_bluetooth_status
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_whitelist_get
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[6c]"></a>timers_create</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = timers_create &rArr; create_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_framework_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_flash_timer_init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_send_data_timer
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[74]"></a>ble_devinfo_serv_init</STRONG> (Thumb, 144 bytes, Stack size 112 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = ble_devinfo_serv_init &rArr; ble_dis_init &rArr; char_add &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_factory_test_done
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_ascii_to_utf8
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dis_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[34]"></a>conn_params_error_handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = conn_params_error_handler &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[79]"></a>on_ble_evt</STRONG> (Thumb, 538 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = on_ble_evt &rArr; advertising_start &rArr; advertising_init &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trigger_ota_mode
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sport_data_sync_process_send
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_should_checkdev_loss_on_disconnect
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_dev_loss_should_alert
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_status
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_stop
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_should_checkdev_loss_on_disconnect
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_should_trigger_ota_flag
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_dev_loss_should_alert
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_dev_loss_alert_level
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_store_user_id
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_masters_store
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_masters_delete
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_masters_check
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[31]"></a>ble_evt_dispatch</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = ble_evt_dispatch &rArr; on_ble_evt &rArr; advertising_start &rArr; advertising_init &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_bluetooth_status
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_on_ble_evt
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_on_ble_evt
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_on_ble_evt
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>bond_manager_error_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = bond_manager_error_handler &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_bluetooth_connected
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[96]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init1
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_check
</UL>

<P><STRONG><a name="[30]"></a>ble_stack_evt_schedule</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ble_stack_evt_schedule &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>app_timer_evt_schedule</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = app_timer_evt_schedule &rArr; app_sched_event_put &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_event_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[a4]"></a>gap_params_init</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = gap_params_init &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[a5]"></a>services_init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = services_init &rArr; ble_devinfo_serv_init &rArr; ble_dis_init &rArr; char_add &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tps_init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_devinfo_serv_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[a7]"></a>sec_params_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init2
</UL>

<P><STRONG><a name="[99]"></a>lfclk_config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init1
</UL>

<P><STRONG><a name="[36]"></a>ble_stack_evt_get</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ble_stack_evt_get &rArr; intern_ble_stack_events_execute &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_ble_stack_events_execute
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>app_timer_evt_get</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = app_timer_evt_get &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>bas_init</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = bas_init &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_battery_up_callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[3b]"></a>battery_level_meas_timeout_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bd_battery.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_battery.o(.text)
</UL>
<P><STRONG><a name="[dd]"></a>rx_char_add</STRONG> (Thumb, 158 bytes, Stack size 80 bytes, bd_ble_nus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_init
</UL>

<P><STRONG><a name="[de]"></a>tx_char_add</STRONG> (Thumb, 138 bytes, Stack size 72 bytes, bd_ble_nus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_init
</UL>

<P><STRONG><a name="[e2]"></a>L1_resend_package</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = L1_resend_package &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_crc16
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_async_send
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_package_handle
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_send_func
</UL>

<P><STRONG><a name="[3d]"></a>delay_send_func</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = delay_send_func &rArr; L1_resend_package &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_resend_package
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_complete_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_communicate_protocol.o(.text)
</UL>
<P><STRONG><a name="[3e]"></a>receive_time_out_handle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bd_communicate_protocol.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bd_communicate_protocol.o(.text)
</UL>
<P><STRONG><a name="[3f]"></a>user_action_timeout_handle</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = user_action_timeout_handle &rArr; bond_fail_event_dispatch &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_fail_event_dispatch
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_communicate_protocol.o(.text)
</UL>
<P><STRONG><a name="[e8]"></a>response_package_handle</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = response_package_handle &rArr; L1_resend_package &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_resend_package
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_complete_callback
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_receive_data
</UL>

<P><STRONG><a name="[ea]"></a>resolve_HealthData_command</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = resolve_HealthData_command &rArr; send_all_data &rArr; start_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_quater_sport_mode
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_quater_active_time
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_quarter_steps
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_quarter_distance
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_quarter_calories
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_step_counts_today
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_step_counts_today
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2_frame_resolve
</UL>

<P><STRONG><a name="[f3]"></a>resolve_settings_config_command</STRONG> (Thumb, 392 bytes, Stack size 32 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = resolve_settings_config_command &rArr; save_alarm &rArr; save_alarms_into_flash &rArr; bd_flash_write_erased_page &rArr; ble_flash_word_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_user_profile
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_system_clock
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_step_counts_today
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_dev_loss_alert_level
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_daily_target_achieved
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_daily_target
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_number
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_profile
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_daily_target
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_alarm
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;return_alarm_list
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_systme_clock_valid
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_algorithm_started
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_dev_loss_should_alert
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restart_health_algorithm
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_bonded
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2_frame_resolve
</UL>

<P><STRONG><a name="[107]"></a>resolve_firmware_update_command</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = resolve_firmware_update_command &rArr; enter_ota_status_response &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_data_sending_flag
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_sending_flag
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_ota_status_response
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_power_percentage
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2_frame_resolve
</UL>

<P><STRONG><a name="[10b]"></a>L2_frame_resolve</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = L2_frame_resolve &rArr; resolve_private_bond_command &rArr; send_last_time_sleep_mode &rArr; send_all_data &rArr; start_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_log_command_id
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_action_control_stop
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_control
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stack_dump_command_resolve
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_test
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_private_bond_command
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_firmware_update_command
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_settings_config_command
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolve_HealthData_command
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_receive_data
</UL>

<P><STRONG><a name="[10c]"></a>resolve_private_bond_command</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = resolve_private_bond_command &rArr; send_last_time_sleep_mode &rArr; send_all_data &rArr; start_send_data_timer &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_setting_count
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_last_time_sleep_mode
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;login_success_event_dispatch
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;login_fail_event_dispatch
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_user_id_bonded
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_fail_event_dispatch
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_power_percentage
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2_frame_resolve
</UL>

<P><STRONG><a name="[115]"></a>L1_crc_check</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bd_communicate_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = L1_crc_check &rArr; bd_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_receive_data
</UL>

<P><STRONG><a name="[11f]"></a>all_led_flash_control</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bd_led_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = all_led_flash_control
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_stop
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_schedule_timer_handle
</UL>

<P><STRONG><a name="[41]"></a>led_schedule_timer_handle</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, bd_led_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_stop
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_led_flash_control
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_led_action_control_with_interval
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_led_flash.o(.text)
</UL>
<P><STRONG><a name="[121]"></a>_led_action_control_with_interval</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, bd_led_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_query_timer
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_schedule_timer_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_control_with_interval
</UL>

<P><STRONG><a name="[42]"></a>bond_fail_callback</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bd_private_bond.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bd_private_bond.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>update_wall_clock</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bd_wall_clock_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = update_wall_clock &rArr; minute_timer_handler &rArr; update_sleep_status &rArr; two_Double_tap_handle &rArr; notification_start &rArr; show_step_task_complete_status &rArr; led_action_control &rArr; led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_algorithm_started
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_start
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minute_timer_handler
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_alarm
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_wall_clock_timer.o(.text)
</UL>
<P><STRONG><a name="[133]"></a>LIS3DH_Init</STRONG> (Thumb, 306 bytes, Stack size 8 bytes, bd_hal_acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LIS3DH_Init &rArr; LIS3DH_SetODR &rArr; LIS3DH_WriteReg &rArr; spi_master_tx_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_disable
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetODR
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetMode
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetIntConfiguration
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetFullScale
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetClickCFG
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetBDU
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetAxis
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_FIFOModeEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_acc_init
</UL>

<P><STRONG><a name="[194]"></a>set_sport_data_buffer_header</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_sport_data_buffer_header
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sport_data_from_ram
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_group_data
</UL>

<P><STRONG><a name="[19e]"></a>set_sleep_data_buffer_header</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_sleep_data_buffer_header
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sleep_group_data
</UL>

<P><STRONG><a name="[1a2]"></a>send_sleep_flash_cb</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = send_sleep_flash_cb &rArr; get_next_sleep_read_group_address &rArr; get_flash_page_number &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_sleep_read_group_address
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data_callback
</UL>

<P><STRONG><a name="[1a4]"></a>send_sport_flash_cb</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bd_sync_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = send_sport_flash_cb &rArr; get_next_sport_read_group_address &rArr; get_flash_page_number &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_sport_read_group_address
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_all_data_callback
</UL>

<P><STRONG><a name="[1ae]"></a>show_animation_status</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bd_interaction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = show_animation_status &rArr; led_action_control &rArr; led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_control
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_control_with_interval
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
</UL>

<P><STRONG><a name="[1ad]"></a>show_step_task_complete_status</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, bd_interaction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = show_step_task_complete_status &rArr; led_action_control &rArr; led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_control
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_step_counts_today
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_daily_target
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start
</UL>

<P><STRONG><a name="[1af]"></a>show_charging_percentage</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, bd_charging.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = show_charging_percentage &rArr; led_action_control &rArr; led_action_control_with_interval &rArr; _led_action_control_with_interval &rArr; led_schedule_timer_handle &rArr; led_action_stop &rArr;  update_charging_status (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_action_control
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_power_percentage
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_charging_status
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function_charger_event_handler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_framework_init
</UL>

<P><STRONG><a name="[49]"></a>motor_schedule_timer_handle</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, bd_level_drive_motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = motor_schedule_timer_handle &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_virbrate_stop
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_virbrate_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bd_level_drive_motor.o(.text)
</UL>
<P><STRONG><a name="[1b1]"></a>motor_virbrate_start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bd_level_drive_motor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_schedule_timer_handle
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_action_control_start
</UL>

<P><STRONG><a name="[1b0]"></a>motor_virbrate_stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bd_level_drive_motor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_action_control_stop
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_schedule_timer_handle
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_action_control_start
</UL>

<P><STRONG><a name="[1c6]"></a>report_get_dump_info_fail</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, bd_stack_dump_repoter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = report_get_dump_info_fail &rArr; L1_send &rArr; schedule_async_send &rArr; async_send &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L1_send
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stack_dump_command_resolve
</UL>

<P><STRONG><a name="[1c8]"></a>save_alarms_into_flash</STRONG> (Thumb, 42 bytes, Stack size 72 bytes, bd_data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = save_alarms_into_flash &rArr; bd_flash_write_erased_page &rArr; ble_flash_word_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_write_erased_page
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_alarm
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_data_to_flash
</UL>

<P><STRONG><a name="[1cb]"></a>save_profile_into_flash</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bd_data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = save_profile_into_flash &rArr; bd_flash_write_erased_page &rArr; ble_flash_word_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bd_flash_write_erased_page
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_profile
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_data_to_flash
</UL>

<P><STRONG><a name="[1d2]"></a>is_manual_peripheral_setup_needed</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1d3]"></a>tx_power_level_char_add</STRONG> (Thumb, 126 bytes, Stack size 80 bytes, ble_tps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = tx_power_level_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tps_init
</UL>

<P><STRONG><a name="[1d4]"></a>battery_level_char_add</STRONG> (Thumb, 302 bytes, Stack size 96 bytes, ble_bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = battery_level_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_report_ref_encode
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_init
</UL>

<P><STRONG><a name="[1d6]"></a>pnp_id_encode</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ble_dis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = pnp_id_encode &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dis_init
</UL>

<P><STRONG><a name="[1d7]"></a>char_add</STRONG> (Thumb, 156 bytes, Stack size 96 bytes, ble_dis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = char_add &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dis_init
</UL>

<P><STRONG><a name="[1d8]"></a>sys_id_encode</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ble_dis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = sys_id_encode &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dis_init
</UL>

<P><STRONG><a name="[1da]"></a>uuid_list_sized_encode</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uuid_list_sized_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
</UL>

<P><STRONG><a name="[1d9]"></a>uuid_list_encode</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_sized_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[1de]"></a>adv_data_encode</STRONG> (Thumb, 360 bytes, Stack size 40 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_encode
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_encode
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>

<P><STRONG><a name="[1dd]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_advdata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encode_device_class
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_encode
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[1df]"></a>name_encode</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = name_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[1e0]"></a>conn_int_encode</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = conn_int_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[1e1]"></a>manuf_specific_data_encode</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = manuf_specific_data_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[1e2]"></a>service_data_encode</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = service_data_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[55]"></a>update_timeout_handler</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = update_timeout_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_conn_params.o(.text)
</UL>
<P><STRONG><a name="[1e4]"></a>conn_params_negotiation</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = conn_params_negotiation &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_bluetooth_status
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_conn_params_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
</UL>

<P><STRONG><a name="[1e5]"></a>is_conn_params_ok</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ble_conn_params.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_change_conn_params
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
</UL>

<P><STRONG><a name="[1ec]"></a>pre_restart_info_store</STRONG> (Thumb, 410 bytes, Stack size 136 bytes, ble_debug_assert_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_step_counts_today
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_daily_target_achieved
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_step_counts_today
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_bonded
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_curr_health_data
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wall_clock_time_counter
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertToUTCTime
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_word_write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_crc16_compute
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_dev_loss_controller_data
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_last_sleep_setting_event_head
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_last_sleep_setting_event
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_pre_restart_info_store
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_debug_assert_handler
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_pre_restart_info_store
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_info_store
</UL>

<P><STRONG><a name="[1f4]"></a>flash_page_erase</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ble_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_write
</UL>

<P><STRONG><a name="[1f3]"></a>flash_word_write</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_word_write
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_word_write
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_block_write
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_write
</UL>

<P><STRONG><a name="[57]"></a>softdevice_assertion_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_stack_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = softdevice_assertion_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_stack_handler.o(.text)
</UL>
<P><STRONG><a name="[59]"></a>detection_delay_timeout_handler</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = detection_delay_timeout_handler &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_pins_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(.text)
</UL>
<P><STRONG><a name="[58]"></a>gpiote_event_handler</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gpiote_event_handler &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(.text)
</UL>
<P><STRONG><a name="[1fe]"></a>pins_sense_disable</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, app_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pins_sense_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_user_register
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_user_disable
</UL>

<P><STRONG><a name="[1ff]"></a>app_sched_event_get</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_scheduler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_sched_event_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sched_execute
</UL>

<P><STRONG><a name="[209]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
</UL>

<P><STRONG><a name="[203]"></a>timer_list_insert</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
</UL>

<P><STRONG><a name="[200]"></a>timer_timeouts_check</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = timer_timeouts_check &rArr; app_error_handler &rArr; ble_debug_assert_handler &rArr; pre_restart_info_store &rArr; save_curr_health_data &rArr; save_quarter_distance_data &rArr; save_sport_group_data &rArr; get_next_sport_write_group_address &rArr; ble_flash_page_delay_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
</UL>

<P><STRONG><a name="[202]"></a>list_insertions_handler</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = list_insertions_handler &rArr; timer_list_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[20a]"></a>user_id_get</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_all
</UL>

<P><STRONG><a name="[208]"></a>rtc1_stop</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[201]"></a>timer_list_handler_sched</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_all
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>

<P><STRONG><a name="[204]"></a>elapsed_ticks_acquire</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = elapsed_ticks_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[205]"></a>list_deletions_handler</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = list_deletions_handler &rArr; timer_list_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[206]"></a>expired_timers_handler</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = expired_timers_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[207]"></a>compare_reg_update</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = compare_reg_update &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[20b]"></a>user_op_alloc</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_all
</UL>

<P><STRONG><a name="[20d]"></a>timer_list_remove</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
</UL>

<P><STRONG><a name="[20e]"></a>bond_info_store</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bond_info_store &rArr; ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_word_write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_crc16_compute
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_block_write
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_masters_store
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_update
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_auth_status_from_new_master
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_master_delete
</UL>

<P><STRONG><a name="[20f]"></a>sys_attr_store</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sys_attr_store &rArr; ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_word_write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_crc16_compute
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_block_write
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_masters_store
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_master_delete
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_sys_attr_store
</UL>

<P><STRONG><a name="[218]"></a>master_sys_attr_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ble_bondmngr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_on_ble_evt
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_sec_update
</UL>

<P><STRONG><a name="[211]"></a>update_whitelist</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = update_whitelist
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_update
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_all_from_flash
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_auth_status_from_new_master
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_master_delete
</UL>

<P><STRONG><a name="[210]"></a>on_auth_status_from_new_master</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = on_auth_status_from_new_master &rArr; bond_info_store &rArr; ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_whitelist
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_info_store
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_on_ble_evt
</UL>

<P><STRONG><a name="[212]"></a>master_find_in_db</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = master_find_in_db
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_on_ble_evt
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_sec_info_request
</UL>

<P><STRONG><a name="[213]"></a>load_all_from_flash</STRONG> (Thumb, 170 bytes, Stack size 112 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = load_all_from_flash &rArr; sys_attr_load_from_flash &rArr; ble_flash_crc16_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_attr_load_from_flash
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bonding_info_load_from_flash
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_whitelist
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_init
</UL>

<P><STRONG><a name="[216]"></a>on_connect</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = on_connect &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_on_ble_evt
</UL>

<P><STRONG><a name="[217]"></a>auth_status_update</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = auth_status_update &rArr; bond_info_store &rArr; ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_info_store
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_on_ble_evt
</UL>

<P><STRONG><a name="[214]"></a>bonding_info_load_from_flash</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bonding_info_load_from_flash &rArr; ble_flash_crc16_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_crc16_compute
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_extract
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_all_from_flash
</UL>

<P><STRONG><a name="[215]"></a>sys_attr_load_from_flash</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_attr_load_from_flash &rArr; ble_flash_crc16_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_addr
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_crc16_compute
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_extract
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_all_from_flash
</UL>

<P><STRONG><a name="[21d]"></a>flash_pages_erase</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_pages_erase &rArr; ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_masters_delete
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_master_delete
</UL>

<P><STRONG><a name="[21b]"></a>master_update</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = master_update &rArr; update_whitelist
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_whitelist
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_bonded_masters_store
</UL>

<P><STRONG><a name="[219]"></a>on_sec_info_request</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = on_sec_info_request &rArr; master_find_in_db
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_find_in_db
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_on_ble_evt
</UL>

<P><STRONG><a name="[21a]"></a>on_sec_update</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, ble_bondmngr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = on_sec_update
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_sys_attr_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bondmngr_on_ble_evt
</UL>

<P><STRONG><a name="[220]"></a>crc_extract</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ble_bondmngr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_attr_load_from_flash
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bonding_info_load_from_flash
</UL>

<P><STRONG><a name="[223]"></a>compute_peak_feature_core</STRONG> (Thumb, 294 bytes, Stack size 48 bytes, click-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = compute_peak_feature_core &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_peak_feature
</UL>

<P><STRONG><a name="[225]"></a>get_idx</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, click-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = get_idx &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detect_peak
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_peak_feature_core
</UL>

<P><STRONG><a name="[228]"></a>compute_peak_feature</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, click-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = compute_peak_feature &rArr; compute_peak_feature_core &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_peak_feature_core
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;click_algorithm_accelerate_data_in
</UL>

<P><STRONG><a name="[227]"></a>detect_peak</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, click-algorithm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = detect_peak &rArr; get_idx &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;click_algorithm_accelerate_data_in
</UL>

<P><STRONG><a name="[235]"></a>ABS</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sleep-detect-algorithm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EpochMaker_InThreshold
</UL>

<P><STRONG><a name="[256]"></a>init_continuous_step</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, distance-step.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_peak
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_detect_step
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_step
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seven_step_detect
</UL>

<P><STRONG><a name="[254]"></a>seven_step_detect</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, distance-step.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = seven_step_detect &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abs
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_continuous_step
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_detect_step
</UL>

<P><STRONG><a name="[257]"></a>filter_step</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, distance-step.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = filter_step &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abs
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_continuous_step
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_detect_step
</UL>

<P><STRONG><a name="[258]"></a>peak_detect_step</STRONG> (Thumb, 662 bytes, Stack size 56 bytes, distance-step.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = peak_detect_step &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_step
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seven_step_detect
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_continuous_step
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_detect
</UL>

<P><STRONG><a name="[259]"></a>filter_peak</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, distance-step.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = filter_peak &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abs
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_continuous_step
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_detect
</UL>

<P><STRONG><a name="[25a]"></a>peak_detect</STRONG> (Thumb, 308 bytes, Stack size 72 bytes, distance-step.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = peak_detect &rArr; peak_detect_step &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_peak
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peak_detect_step
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_step_data
</UL>

<P><STRONG><a name="[255]"></a>my_abs</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, distance-step.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_peak
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_step
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seven_step_detect
</UL>

<P><STRONG><a name="[25b]"></a>calc_charact</STRONG> (Thumb, 378 bytes, Stack size 96 bytes, distance-steplength.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = calc_charact &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abs
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_distance_data
</UL>

<P><STRONG><a name="[25c]"></a>my_abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, distance-steplength.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_charact
</UL>

<P><STRONG><a name="[271]"></a>_fp_digits</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[26f]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsnprintf
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf
</UL>

<P><STRONG><a name="[274]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[273]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5a]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0vsnprintf)
<LI> printfa.o(i.__0snprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
